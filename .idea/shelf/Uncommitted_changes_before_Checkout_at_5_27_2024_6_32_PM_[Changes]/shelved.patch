Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n<!--    new-->\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.pocketchef\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".EditProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".AdvancedSearchActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".SearchedRecipesOutput\"\r\n            android:exported=\"false\"/>\r\n        <activity\r\n            android:name=\".RecipeActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".RecipeDetailsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:theme=\"@style/Theme.StartApp\"\r\n\r\n\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.pocketchef\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	
+++ b/app/src/main/AndroidManifest.xml	
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools">
+
     <uses-permission android:name="android.permission.INTERNET" />
-<!--    new-->
+
     <application
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
@@ -13,6 +14,9 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.pocketchef"
         tools:targetApi="31">
+        <activity
+            android:name=".CreateCategoryActivity"
+            android:exported="false" />
         <activity
             android:name=".ProfileActivity"
             android:exported="false" />
@@ -24,7 +28,7 @@
             android:exported="false" />
         <activity
             android:name=".SearchedRecipesOutput"
-            android:exported="false"/>
+            android:exported="false" />
         <activity
             android:name=".RecipeActivity"
             android:exported="false" />
@@ -32,21 +36,19 @@
             android:name=".RecipeDetailsActivity"
             android:exported="false" />
         <activity
-            android:theme="@style/Theme.StartApp"
-
-
             android:name=".MainActivity"
-            android:exported="true" />
-        <activity
-            android:name=".LoginActivity"
             android:exported="true"
-            android:theme="@style/Theme.pocketchef">
+            android:theme="@style/Theme.StartApp">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+        <activity
+            android:name=".LoginActivity"
+            android:exported="true"
+            android:theme="@style/Theme.pocketchef"></activity>
     </application>
 
 </manifest>
\ No newline at end of file
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n        <DropdownSelection timestamp=\"2024-05-22T00:42:21.217959700Z\">\r\n          <Target type=\"DEFAULT_BOOT\">\r\n            <handle>\r\n              <DeviceId pluginId=\"LocalEmulator\" identifier=\"path=C:\\Users\\iijay\\.android\\avd\\Pixel_8_Pro_API_33.avd\" />\r\n            </handle>\r\n          </Target>\r\n        </DropdownSelection>\r\n        <DialogSelection />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	
+++ b/.idea/deploymentTargetSelector.xml	
@@ -4,10 +4,10 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
-        <DropdownSelection timestamp="2024-05-22T00:42:21.217959700Z">
+        <DropdownSelection timestamp="2024-05-25T09:36:04.035313500Z">
           <Target type="DEFAULT_BOOT">
             <handle>
-              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\iijay\.android\avd\Pixel_8_Pro_API_33.avd" />
+              <DeviceId pluginId="Default" identifier="serial=127.0.0.1:21503;connection=96564fef" />
             </handle>
           </Target>
         </DropdownSelection>
Index: app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.VelocityTracker;\r\nimport android.view.View;\r\nimport android.view.ViewTreeObserver;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.constraintlayout.motion.widget.MotionLayout;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.splashscreen.SplashScreen;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport com.google.android.material.appbar.MaterialToolbar;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport sg.edu.np.mad.pocketchef.Models.FavoriteRecipe;\r\n\r\npublic class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n    boolean isReady = false;\r\n    private MotionLayout motionLayout;\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    MaterialToolbar toolbar;\r\n    MenuItem nav_home, nav_recipes, nav_search;\r\n\r\n    CardView cardView1, cardView2, cardView3, cardView4, cardView5, cardView6;\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        SplashScreen.installSplashScreen(this);\r\n        View content = findViewById(android.R.id.content);\r\n        content.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {\r\n            @Override\r\n            public boolean onPreDraw() {\r\n                if (isReady) {\r\n                    content.getViewTreeObserver().removeOnPreDrawListener(this);\r\n                }\r\n                dismissSplashScreen();\r\n                return false;\r\n            }\r\n        });\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_main);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main_activity), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n        FindViews(); // Initialize views after setContentView()\r\n        // Set toolbar as action bar\r\n        setSupportActionBar(toolbar);\r\n        // Hide and Show Items\r\n        Menu menu = navigationView.getMenu();\r\n        menu.findItem(R.id.nav_logout).setVisible(false);\r\n        menu.findItem(R.id.nav_shoppinglist).setVisible(false);\r\n        // Set up navigation view\r\n        navigationView.bringToFront();\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(nav_home);\r\n        // Custom setOnTouchListener for swipe gestures (in-built Gesture Detector is not working)\r\n        motionLayout.setOnTouchListener(new View.OnTouchListener() {\r\n            private float startX;\r\n            private VelocityTracker velocityTracker;\r\n\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                switch (event.getActionMasked()) {\r\n                    case MotionEvent.ACTION_DOWN:\r\n                        startX = event.getX();\r\n                        if (velocityTracker == null) {\r\n                            velocityTracker = VelocityTracker.obtain();\r\n                        } else {\r\n                            velocityTracker.clear();\r\n                        }\r\n                        velocityTracker.addMovement(event);\r\n                        break;\r\n                    case MotionEvent.ACTION_MOVE:\r\n                        velocityTracker.addMovement(event);\r\n                        velocityTracker.computeCurrentVelocity(1000);\r\n                        break;\r\n                    case MotionEvent.ACTION_UP:\r\n                        float endX = event.getX();\r\n                        float diffX = endX - startX;\r\n                        if (Math.abs(diffX) > 10 && velocityTracker != null) {\r\n                            velocityTracker.computeCurrentVelocity(1000);\r\n                            float velocityX = velocityTracker.getXVelocity();\r\n                            if (Math.abs(velocityX) > 100) {\r\n                                if (diffX > 0) {\r\n                                    // Right swipe (forward)\r\n                                    motionLayout.transitionToEnd();\r\n                                } else {\r\n                                    // Left swipe (backward)\r\n                                    motionLayout.transitionToStart();\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case MotionEvent.ACTION_CANCEL:\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        // Card View On CLick Listener for RecipeActivity\r\n        cardView1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, RecipeActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        // Card View On Click Listener for AdvancedSearchActivity\r\n        cardView2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, AdvancedSearchActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        cardView3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, FavoriteRecipesActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        cardView4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, ProfileActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n    private void FindViews() {\r\n        motionLayout = findViewById(R.id.main_activity);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        nav_home = navigationView.getMenu().findItem(R.id.nav_home);\r\n        nav_recipes = navigationView.getMenu().findItem(R.id.nav_recipes);\r\n        nav_search = navigationView.getMenu().findItem(R.id.nav_search);\r\n        cardView1 =findViewById(R.id.cardView1);\r\n        cardView2 = findViewById(R.id.cardView2);\r\n        cardView3 = findViewById(R.id.cardView3);\r\n        cardView4 = findViewById(R.id.cardView4);\r\n        cardView5 = findViewById(R.id.cardView5);\r\n        cardView6 = findViewById(R.id.cardView6);\r\n    }\r\n\r\n    private void dismissSplashScreen() {\r\n        new Handler().postDelayed(() -> isReady = true, 3000);\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        int itemId = menuItem.getItemId();\r\n        if (itemId == R.id.nav_home) {\r\n            // Nothing happens\r\n        } else if (itemId == R.id.nav_recipes) {\r\n            Intent intent = new Intent(MainActivity.this, RecipeActivity.class);\r\n            finish();\r\n            startActivity(intent);\r\n        } else if (itemId == R.id.nav_search) {\r\n            Intent intent2 = new Intent(MainActivity.this, AdvancedSearchActivity.class);\r\n            finish();\r\n            startActivity(intent2);\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java	
@@ -27,7 +27,11 @@
 import com.google.android.material.appbar.MaterialToolbar;
 import com.google.android.material.navigation.NavigationView;
 
+import java.util.List;
+
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
 import sg.edu.np.mad.pocketchef.Models.FavoriteRecipe;
+import sg.edu.np.mad.pocketchef.base.AppDatabase;
 
 public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
     boolean isReady = false;
@@ -74,6 +78,17 @@
         ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
         drawerLayout.addDrawerListener(toggle);
         toggle.syncState();
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                List<CategoryBean> list = AppDatabase.getInstance(MainActivity.this).categoryDao().getAllCategories();
+                if(list==null||list.isEmpty()){
+                    CategoryBean categoryBean =new CategoryBean("Favorite","Favorite");
+                    AppDatabase.getInstance(MainActivity.this).categoryDao().insertCategory(categoryBean);
+                }
+
+            }
+        }).start();
         navigationView.setNavigationItemSelectedListener(this);
         navigationView.setCheckedItem(nav_home);
         // Custom setOnTouchListener for swipe gestures (in-built Gesture Detector is not working)
