Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n\r\n    id(\"com.google.gms.google-services\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"sg.edu.np.mad.pocketchef\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"sg.edu.np.mad.pocketchef\"\r\n        minSdk = 33\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(platform(\"com.google.firebase:firebase-bom:33.0.0\"))\r\n    implementation(\"com.google.firebase:firebase-analytics\")\r\n    implementation(\"com.google.firebase:firebase-auth\")\r\n    implementation(\"com.google.firebase:firebase-database\")\r\n    implementation(\"de.hdodenhof:circleimageview:3.1.0\")\r\n    implementation(\"com.squareup.retrofit2:retrofit:2.11.0\")\r\n    implementation(\"com.github.bumptech.glide:glide:4.16.0\")\r\n    implementation(\"com.google.android.material:material:1.7.0\")\r\n    implementation(\"com.squareup.retrofit2:converter-gson:2.9.0\")\r\n    implementation(\"com.squareup.picasso:picasso:2.8\")\r\n    implementation(\"androidx.constraintlayout:constraintlayout:2.0.0\")\r\n    implementation(\"io.github.glailton.expandabletextview:expandabletextview:1.0.4\")\r\n    implementation(\"org.jsoup:jsoup:1.14.3\")\r\n    implementation(\"androidx.core:core-splashscreen:1.0.0-alpha01\")\r\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\r\n    implementation(libs.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.activity)\r\n    implementation(libs.constraintlayout)\r\n    implementation(libs.firebase.storage)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.ext.junit)\r\n    androidTestImplementation(libs.espresso.core)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/build.gradle.kts	(date 1716830198178)
@@ -10,12 +10,12 @@
 
     defaultConfig {
         applicationId = "sg.edu.np.mad.pocketchef"
-        minSdk = 33
+        minSdk = 27
         targetSdk = 34
         versionCode = 1
         versionName = "1.0"
 
-        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
+            testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
     }
 
     buildTypes {
@@ -27,6 +27,11 @@
             )
         }
     }
+
+    buildFeatures {
+        viewBinding =true
+    }
+
     compileOptions {
         sourceCompatibility = JavaVersion.VERSION_1_8
         targetCompatibility = JavaVersion.VERSION_1_8
@@ -57,4 +62,11 @@
     testImplementation(libs.junit)
     androidTestImplementation(libs.ext.junit)
     androidTestImplementation(libs.espresso.core)
+    val dialogx_version = "0.0.50.beta2"
+    implementation ("com.github.kongzue.DialogX:DialogX:${dialogx_version}")
+    implementation ("com.github.kongzue.DialogXSample:AlbumDialog:0.0.12")
+    implementation ("com.github.bumptech.glide:glide:4.16.0")
+    implementation ("androidx.room:room-runtime:2.6.1")
+    annotationProcessor ("androidx.room:room-compiler:2.6.1")
+    implementation ("com.github.kongzue.DialogXSample:FileDialog:0.0.12")
 }
\ No newline at end of file
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>pluginManagement {\r\n    repositories {\r\n        google {\r\n            content {\r\n                includeGroupByRegex(\"com\\\\.android.*\")\r\n                includeGroupByRegex(\"com\\\\.google.*\")\r\n                includeGroupByRegex(\"androidx.*\")\r\n            }\r\n        }\r\n        mavenCentral()\r\n        gradlePluginPortal()\r\n    }\r\n}\r\ndependencyResolutionManagement {\r\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n    }\r\n}\r\n\r\nrootProject.name = \"pocketchef\"\r\ninclude(\":app\")\r\n 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle.kts b/settings.gradle.kts
--- a/settings.gradle.kts	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/settings.gradle.kts	(date 1716634318000)
@@ -7,6 +7,7 @@
                 includeGroupByRegex("androidx.*")
             }
         }
+        maven { url = uri("https://jitpack.io") }
         mavenCentral()
         gradlePluginPortal()
     }
@@ -14,6 +15,7 @@
 dependencyResolutionManagement {
     repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
     repositories {
+        maven { url = uri("https://jitpack.io") }
         google()
         mavenCentral()
     }
Index: app/src/main/res/layout/activity_recipe_details.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:fitsSystemWindows=\"true\"\r\n    tools:context=\".MainActivity\">\r\n\r\n    <com.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        app:headerLayout=\"@layout/header\"\r\n        app:menu=\"@menu/main_menu\" />\r\n\r\n    <FrameLayout\r\n        android:id=\"@+id/main\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/paletteorange\"\r\n        tools:context=\".RecipeDetailsActivity\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            android:background=\"@color/paletteorange\"\r\n            tools:context=\".RecipeDetailsActivity\"\r\n            android:id=\"@+id/recipe_details\"\r\n            android:clickable=\"true\"\r\n            android:focusable=\"true\">\r\n\r\n            <com.google.android.material.appbar.MaterialToolbar\r\n                android:id=\"@+id/toolbar\"\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:background=\"@color/paletteblue\"\r\n                android:minHeight=\"?attr/actionBarSize\"\r\n                app:contentInsetStart=\"0dp\"\r\n                app:contentInsetStartWithNavigation=\"0dp\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:navigationIcon=\"@drawable/ic_launcher_foreground\"\r\n                app:title=\"Recipe Details\" />\r\n\r\n            <!-- add to favorite list button -->\r\n            <com.google.android.material.button.MaterialButton\r\n                android:id=\"@+id/btn_favorite\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_margin=\"10dp\"\r\n                android:backgroundTint=\"@color/paletteblue\"\r\n                android:textColor=\"@android:color/white\"\r\n                app:icon=\"@drawable/ic_btn_star\"\r\n                app:iconGravity=\"textEnd\"\r\n                app:iconPadding=\"15dp\"\r\n                app:iconSize=\"30dp\"\r\n                app:iconTint=\"@android:color/white\"\r\n                android:contentDescription=\"@string/btn_favourite_text\"\r\n                style=\"@style/Widget.MaterialComponents.ExtendedFloatingActionButton.Icon\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintStart_toEndOf=\"@id/toolbar\"\r\n                tools:ignore=\"MissingConstraints\" />\r\n\r\n            <!-- Nested scroll view for accessibility -->\r\n            <androidx.core.widget.NestedScrollView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"0dp\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@+id/toolbar\">\r\n                <!-- Linear layout to contain content -->\r\n                <LinearLayout\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:background=\"@color/palettebeige\"\r\n                    android:orientation=\"vertical\"\r\n                    android:padding=\"8dp\">\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_meal_name\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:padding=\"4dp\"\r\n                        android:text=\"@string/recipe_name\"\r\n                        android:textColor=\"@color/paletteorange\"\r\n                        android:textSize=\"20sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_meal_source\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:padding=\"4dp\"\r\n                        android:text=\"@string/source\"\r\n                        android:textColor=\"@color/paletteblack\"\r\n                        android:textSize=\"14sp\"\r\n                        android:textStyle=\"italic\" />\r\n\r\n                    <ImageView\r\n                        android:id=\"@+id/imageView_meal_image\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"250dp\"\r\n                        android:layout_margin=\"8dp\"\r\n                        android:scaleType=\"centerCrop\"\r\n                        tools:ignore=\"ContentDescription\" />\r\n\r\n                    <GridLayout\r\n                        android:id=\"@+id/gridLayout_summary\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:layout_margin=\"4dp\"\r\n                        android:layout_marginTop=\"40dp\"\r\n                        android:background=\"@color/paletteblue\"\r\n                        android:columnCount=\"4\"\r\n                        android:elevation=\"4dp\"\r\n                        android:orientation=\"horizontal\"\r\n                        android:padding=\"8dp\"\r\n                        android:rowCount=\"2\">\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textView_protein_label\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_row=\"0\"\r\n                            android:layout_column=\"0\"\r\n                            android:layout_marginEnd=\"12dp\"\r\n                            android:layout_marginBottom=\"12dp\"\r\n                            android:text=\"@string/textView_protein_label_text\"\r\n                            android:textColor=\"@color/paletteorange\"\r\n                            android:textSize=\"18sp\"\r\n                            android:textStyle=\"normal\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textView_protein_value\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_row=\"0\"\r\n                            android:layout_column=\"1\"\r\n                            android:layout_marginEnd=\"12dp\"\r\n                            android:layout_marginBottom=\"12dp\"\r\n                            android:textColor=\"@color/paletteorange\"\r\n                            android:textSize=\"18sp\"\r\n                            android:textStyle=\"normal\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textView_fat_label\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_row=\"0\"\r\n                            android:layout_column=\"2\"\r\n                            android:layout_marginEnd=\"12dp\"\r\n                            android:layout_marginBottom=\"12dp\"\r\n                            android:text=\"@string/textView_fat_label_text\"\r\n                            android:textColor=\"@color/paletteorange\"\r\n                            android:textSize=\"18sp\"\r\n                            android:textStyle=\"normal\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textView_fat_value\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_row=\"0\"\r\n                            android:layout_column=\"3\"\r\n                            android:layout_marginBottom=\"12dp\"\r\n                            android:textColor=\"@color/paletteorange\"\r\n                            android:textSize=\"18sp\"\r\n                            android:textStyle=\"normal\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textView_calories_label\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_row=\"1\"\r\n                            android:layout_column=\"0\"\r\n                            android:layout_marginEnd=\"12dp\"\r\n                            android:layout_marginBottom=\"12dp\"\r\n                            android:text=\"@string/textView_calories_label_text\"\r\n                            android:textColor=\"@color/paletteorange\"\r\n                            android:textSize=\"18sp\"\r\n                            android:textStyle=\"normal\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textView_calories_value\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_row=\"1\"\r\n                            android:layout_column=\"1\"\r\n                            android:layout_marginEnd=\"12dp\"\r\n                            android:layout_marginBottom=\"12dp\"\r\n                            android:textColor=\"@color/paletteorange\"\r\n                            android:textSize=\"18sp\"\r\n                            android:textStyle=\"normal\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textView_daily_requirements_coverage_label\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_row=\"1\"\r\n                            android:layout_column=\"2\"\r\n                            android:layout_marginEnd=\"12dp\"\r\n                            android:layout_marginBottom=\"12dp\"\r\n                            android:text=\"@string/textView_daily_requirements_coverage_label_text\"\r\n                            android:textColor=\"@color/paletteorange\"\r\n                            android:textSize=\"18sp\"\r\n                            android:textStyle=\"normal\" />\r\n\r\n                        <TextView\r\n                            android:id=\"@+id/textView_daily_requirements_coverage_value\"\r\n                            android:layout_width=\"wrap_content\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:layout_row=\"1\"\r\n                            android:layout_column=\"3\"\r\n                            android:layout_marginBottom=\"12dp\"\r\n                            android:textColor=\"@color/paletteorange\"\r\n                            android:textSize=\"18sp\"\r\n                            android:textStyle=\"normal\" />\r\n                    </GridLayout>\r\n\r\n                    <com.google.android.material.button.MaterialButton\r\n                        android:id=\"@+id/button_Nutrition_Label\"\r\n                        android:layout_width=\"wrap_content\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_gravity=\"center\"\r\n                        android:outlineAmbientShadowColor=\"@color/paletteorange\"\r\n                        android:outlineSpotShadowColor=\"@color/paletteorange\"\r\n                        android:padding=\"8dp\"\r\n                        android:text=\"@string/button_Nutrition_label_text\"\r\n                        android:fontFamily=\"@font/montserrat\"\r\n                        android:backgroundTint=\"@color/paletteorange\"\r\n                        android:textColor=\"@color/palettetext\"/>\r\n                    <!-- Nutrition Dialog Layout -->\r\n                    <androidx.constraintlayout.widget.ConstraintLayout\r\n                        android:id=\"@+id/nutrition_dialog_layout\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:visibility=\"gone\"\r\n                        android:padding=\"16dp\">\r\n\r\n                        <!-- Title TextView -->\r\n                        <com.google.android.material.textview.MaterialTextView\r\n                            android:id=\"@+id/textView_title\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"wrap_content\"\r\n                            android:fontFamily=\"@font/montserrat\"\r\n                            android:text=\"@string/textView_nutritiondialog_title\"\r\n                            android:textAlignment=\"center\"\r\n                            android:textColor=\"@color/palettedarkblue\"\r\n                            android:textSize=\"24sp\"\r\n                            app:layout_constraintTop_toTopOf=\"parent\"/>\r\n\r\n                        <!-- Nutrition Label ImageView -->\r\n                        <ImageView\r\n                            android:id=\"@+id/imageView_nutrition\"\r\n                            android:layout_width=\"match_parent\"\r\n                            android:layout_height=\"500dp\"\r\n                            android:layout_marginTop=\"16dp\"\r\n                            android:scaleType=\"fitCenter\"\r\n                            app:layout_constraintTop_toBottomOf=\"@id/textView_title\"\r\n                            android:src=\"@drawable/ic_launcher_foreground\"\r\n                            tools:ignore=\"ContentDescription\" />\r\n                    </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_meal_servings\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:drawableStart=\"@drawable/ic_servings\"\r\n                        android:drawablePadding=\"8dp\"\r\n                        android:drawableTint=\"@color/paletteorange\"\r\n                        android:padding=\"8dp\"\r\n                        android:text=\"@string/servings_text\"\r\n                        android:textColor=\"@color/paletteblue\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\"\r\n                        tools:ignore=\"UseCompatTextViewDrawableXml\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_meal_ready\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:drawableStart=\"@drawable/ic_time\"\r\n                        android:drawablePadding=\"8dp\"\r\n                        android:drawableTint=\"@color/paletteorange\"\r\n                        android:padding=\"8dp\"\r\n                        android:text=\"@string/time_text\"\r\n                        android:textColor=\"@color/paletteblue\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\"\r\n                        tools:ignore=\"UseCompatTextViewDrawableXml\" />\r\n\r\n                    <TextView\r\n                        android:id=\"@+id/textView_meal_price\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:drawableStart=\"@drawable/ic_cost\"\r\n                        android:drawablePadding=\"8dp\"\r\n                        android:drawableTint=\"@color/paletteorange\"\r\n                        android:padding=\"8dp\"\r\n                        android:text=\"@string/cost_text\"\r\n                        android:textColor=\"@color/paletteblue\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\"\r\n                        tools:ignore=\"UseCompatTextViewDrawableXml\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:padding=\"8dp\"\r\n                        android:text=\"@string/activity_recipe_details_instructions_title\"\r\n                        android:textColor=\"@color/palettedarkblue\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/recycler_meal_instructions\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_margin=\"8dp\"\r\n                        android:background=\"@color/paletteorange\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:padding=\"8dp\"\r\n                        android:text=\"@string/activity_recipe_details_ingredients_title\"\r\n                        android:textColor=\"@color/palettetext\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/recycler_meal_ingredients\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_margin=\"8dp\"\r\n                        android:background=\"@color/paletteorange\" />\r\n\r\n                    <TextView\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:gravity=\"center\"\r\n                        android:padding=\"8dp\"\r\n                        android:text=\"@string/activity_recipe_details_similarrecipes_title\"\r\n                        android:textColor=\"@color/palettetext\"\r\n                        android:textSize=\"18sp\"\r\n                        android:textStyle=\"bold\" />\r\n\r\n                    <androidx.recyclerview.widget.RecyclerView\r\n                        android:id=\"@+id/recycler_meal_similar\"\r\n                        android:layout_width=\"match_parent\"\r\n                        android:layout_height=\"wrap_content\"\r\n                        android:layout_margin=\"8dp\"\r\n                        android:background=\"@color/paletteorange\" />\r\n                </LinearLayout>\r\n            </androidx.core.widget.NestedScrollView>\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n        <ProgressBar\r\n            android:id=\"@+id/progressBar\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_gravity=\"center\"\r\n            android:visibility=\"visible\"\r\n            app:layout_constraintHorizontal_bias=\"0.5\"\r\n            app:layout_constraintVertical_bias=\"0.5\" />\r\n    </FrameLayout>\r\n</androidx.drawerlayout.widget.DrawerLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_recipe_details.xml b/app/src/main/res/layout/activity_recipe_details.xml
--- a/app/src/main/res/layout/activity_recipe_details.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/res/layout/activity_recipe_details.xml	(date 1716782774000)
@@ -47,22 +47,17 @@
                 app:title="Recipe Details" />
 
             <!-- add to favorite list button -->
-            <com.google.android.material.button.MaterialButton
+            <ImageView
                 android:id="@+id/btn_favorite"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
-                android:layout_margin="10dp"
-                android:backgroundTint="@color/paletteblue"
-                android:textColor="@android:color/white"
-                app:icon="@drawable/ic_btn_star"
-                app:iconGravity="textEnd"
-                app:iconPadding="15dp"
-                app:iconSize="30dp"
-                app:iconTint="@android:color/white"
+                android:layout_width="30dp"
+                android:layout_height="30dp"
+                android:tint="@android:color/white"
+                android:layout_marginEnd="20dp"
+                android:src="@drawable/ic_btn_star"
                 android:contentDescription="@string/btn_favourite_text"
-                style="@style/Widget.MaterialComponents.ExtendedFloatingActionButton.Icon"
                 app:layout_constraintEnd_toEndOf="parent"
-                app:layout_constraintStart_toEndOf="@id/toolbar"
+                app:layout_constraintTop_toTopOf="parent"
+                app:layout_constraintBottom_toBottomOf="@+id/toolbar"
                 tools:ignore="MissingConstraints" />
 
             <!-- Nested scroll view for accessibility -->
Index: app/src/main/res/layout/dialog_add_to_favorites.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"16dp\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Save to Favorites\"\r\n        android:textSize=\"18sp\"\r\n        android:textStyle=\"bold\"\r\n        android:paddingBottom=\"8dp\" />\r\n\r\n    <Spinner\r\n        android:id=\"@+id/spinner_categories\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:padding=\"10dp\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edit_new_category\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"Create new category\"\r\n        android:padding=\"10dp\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:gravity=\"end\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_cancel\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Cancel\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_save\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Save\"\r\n            android:layout_marginStart=\"8dp\" />\r\n    </LinearLayout>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_add_to_favorites.xml b/app/src/main/res/layout/dialog_add_to_favorites.xml
--- a/app/src/main/res/layout/dialog_add_to_favorites.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/res/layout/dialog_add_to_favorites.xml	(date 1716630216000)
@@ -20,12 +20,12 @@
         android:layout_marginBottom="16dp"
         android:padding="10dp" />
 
-    <EditText
-        android:id="@+id/edit_new_category"
+    <Button
+        android:id="@+id/bt_new_category"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:hint="Create new category"
-        android:padding="10dp" />
+        android:text="create category"
+        />
 
     <LinearLayout
         android:layout_width="match_parent"
Index: app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.Menu;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.VelocityTracker;\r\nimport android.view.View;\r\nimport android.view.ViewTreeObserver;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.cardview.widget.CardView;\r\nimport androidx.constraintlayout.motion.widget.MotionLayout;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.splashscreen.SplashScreen;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport com.google.android.material.appbar.MaterialToolbar;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport sg.edu.np.mad.pocketchef.Models.FavoriteRecipe;\r\n\r\npublic class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n    boolean isReady = false;\r\n    private MotionLayout motionLayout;\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    MaterialToolbar toolbar;\r\n    MenuItem nav_home, nav_recipes, nav_search;\r\n\r\n    CardView cardView1, cardView2, cardView3, cardView4, cardView5, cardView6;\r\n\r\n    @SuppressLint(\"ClickableViewAccessibility\")\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        SplashScreen.installSplashScreen(this);\r\n        View content = findViewById(android.R.id.content);\r\n        content.getViewTreeObserver().addOnPreDrawListener(new ViewTreeObserver.OnPreDrawListener() {\r\n            @Override\r\n            public boolean onPreDraw() {\r\n                if (isReady) {\r\n                    content.getViewTreeObserver().removeOnPreDrawListener(this);\r\n                }\r\n                dismissSplashScreen();\r\n                return false;\r\n            }\r\n        });\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_main);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main_activity), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n        FindViews(); // Initialize views after setContentView()\r\n        // Set toolbar as action bar\r\n        setSupportActionBar(toolbar);\r\n        // Hide and Show Items\r\n        Menu menu = navigationView.getMenu();\r\n        menu.findItem(R.id.nav_logout).setVisible(false);\r\n        menu.findItem(R.id.nav_shoppinglist).setVisible(false);\r\n        // Set up navigation view\r\n        navigationView.bringToFront();\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        navigationView.setNavigationItemSelectedListener(this);\r\n        navigationView.setCheckedItem(nav_home);\r\n        // Custom setOnTouchListener for swipe gestures (in-built Gesture Detector is not working)\r\n        motionLayout.setOnTouchListener(new View.OnTouchListener() {\r\n            private float startX;\r\n            private VelocityTracker velocityTracker;\r\n\r\n            @Override\r\n            public boolean onTouch(View v, MotionEvent event) {\r\n                switch (event.getActionMasked()) {\r\n                    case MotionEvent.ACTION_DOWN:\r\n                        startX = event.getX();\r\n                        if (velocityTracker == null) {\r\n                            velocityTracker = VelocityTracker.obtain();\r\n                        } else {\r\n                            velocityTracker.clear();\r\n                        }\r\n                        velocityTracker.addMovement(event);\r\n                        break;\r\n                    case MotionEvent.ACTION_MOVE:\r\n                        velocityTracker.addMovement(event);\r\n                        velocityTracker.computeCurrentVelocity(1000);\r\n                        break;\r\n                    case MotionEvent.ACTION_UP:\r\n                        float endX = event.getX();\r\n                        float diffX = endX - startX;\r\n                        if (Math.abs(diffX) > 10 && velocityTracker != null) {\r\n                            velocityTracker.computeCurrentVelocity(1000);\r\n                            float velocityX = velocityTracker.getXVelocity();\r\n                            if (Math.abs(velocityX) > 100) {\r\n                                if (diffX > 0) {\r\n                                    // Right swipe (forward)\r\n                                    motionLayout.transitionToEnd();\r\n                                } else {\r\n                                    // Left swipe (backward)\r\n                                    motionLayout.transitionToStart();\r\n                                }\r\n                            }\r\n                        }\r\n                        break;\r\n                    case MotionEvent.ACTION_CANCEL:\r\n                        break;\r\n                }\r\n                return true;\r\n            }\r\n        });\r\n\r\n        // Card View On CLick Listener for RecipeActivity\r\n        cardView1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, RecipeActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        // Card View On Click Listener for AdvancedSearchActivity\r\n        cardView2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, AdvancedSearchActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        cardView3.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, FavoriteRecipesActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n\r\n        cardView4.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(MainActivity.this, ProfileActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onBackPressed() {\r\n        if (drawerLayout.isDrawerOpen(GravityCompat.START)) {\r\n            drawerLayout.closeDrawer(GravityCompat.START);\r\n        } else {\r\n            super.onBackPressed();\r\n        }\r\n    }\r\n\r\n    private void FindViews() {\r\n        motionLayout = findViewById(R.id.main_activity);\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        nav_home = navigationView.getMenu().findItem(R.id.nav_home);\r\n        nav_recipes = navigationView.getMenu().findItem(R.id.nav_recipes);\r\n        nav_search = navigationView.getMenu().findItem(R.id.nav_search);\r\n        cardView1 =findViewById(R.id.cardView1);\r\n        cardView2 = findViewById(R.id.cardView2);\r\n        cardView3 = findViewById(R.id.cardView3);\r\n        cardView4 = findViewById(R.id.cardView4);\r\n        cardView5 = findViewById(R.id.cardView5);\r\n        cardView6 = findViewById(R.id.cardView6);\r\n    }\r\n\r\n    private void dismissSplashScreen() {\r\n        new Handler().postDelayed(() -> isReady = true, 3000);\r\n    }\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        int itemId = menuItem.getItemId();\r\n        if (itemId == R.id.nav_home) {\r\n            // Nothing happens\r\n        } else if (itemId == R.id.nav_recipes) {\r\n            Intent intent = new Intent(MainActivity.this, RecipeActivity.class);\r\n            finish();\r\n            startActivity(intent);\r\n        } else if (itemId == R.id.nav_search) {\r\n            Intent intent2 = new Intent(MainActivity.this, AdvancedSearchActivity.class);\r\n            finish();\r\n            startActivity(intent2);\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/MainActivity.java	(date 1716829960304)
@@ -27,7 +27,11 @@
 import com.google.android.material.appbar.MaterialToolbar;
 import com.google.android.material.navigation.NavigationView;
 
+import java.util.List;
+
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
 import sg.edu.np.mad.pocketchef.Models.FavoriteRecipe;
+import sg.edu.np.mad.pocketchef.base.AppDatabase;
 
 public class MainActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
     boolean isReady = false;
@@ -35,7 +39,7 @@
     DrawerLayout drawerLayout;
     NavigationView navigationView;
     MaterialToolbar toolbar;
-    MenuItem nav_home, nav_recipes, nav_search;
+    MenuItem nav_home, nav_recipes, nav_search,nav_collect;
 
     CardView cardView1, cardView2, cardView3, cardView4, cardView5, cardView6;
 
@@ -74,6 +78,17 @@
         ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
         drawerLayout.addDrawerListener(toggle);
         toggle.syncState();
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                List<CategoryBean> list = AppDatabase.getInstance(MainActivity.this).categoryDao().getAllCategories();
+                if(list==null||list.isEmpty()){
+                    CategoryBean categoryBean =new CategoryBean("Favorite","Favorite");
+                    AppDatabase.getInstance(MainActivity.this).categoryDao().insertCategory(categoryBean);
+                }
+            }
+        }).start();
+
         navigationView.setNavigationItemSelectedListener(this);
         navigationView.setCheckedItem(nav_home);
         // Custom setOnTouchListener for swipe gestures (in-built Gesture Detector is not working)
@@ -172,6 +187,7 @@
         nav_home = navigationView.getMenu().findItem(R.id.nav_home);
         nav_recipes = navigationView.getMenu().findItem(R.id.nav_recipes);
         nav_search = navigationView.getMenu().findItem(R.id.nav_search);
+        nav_collect = navigationView.getMenu().findItem(R.id.nav_shoppinglist);
         cardView1 =findViewById(R.id.cardView1);
         cardView2 = findViewById(R.id.cardView2);
         cardView3 = findViewById(R.id.cardView3);
@@ -197,6 +213,10 @@
             Intent intent2 = new Intent(MainActivity.this, AdvancedSearchActivity.class);
             finish();
             startActivity(intent2);
+        }else if(itemId == R.id.nav_shoppinglist){
+            Intent intent2 = new Intent(MainActivity.this, CreateCategoryActivity.class);
+            finish();
+            startActivity(intent2);
         }
         drawerLayout.closeDrawer(GravityCompat.START);
         return true;
Index: .idea/deploymentTargetDropDown.xml
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ /dev/null	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <value>
-      <entry key="app">
-        <State />
-      </entry>
-    </value>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
deleted file mode 100644
--- a/.idea/inspectionProfiles/Project_Default.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ /dev/null	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
@@ -1,8 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <profile version="1.0">
-    <option name="myName" value="Project Default" />
-    <inspection_tool class="ExtractMethodRecommender" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="minLength" value="787" />
-    </inspection_tool>
-  </profile>
-</component>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ /dev/null	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .idea/appInsightsSettings.xml
===================================================================
diff --git a/.idea/appInsightsSettings.xml b/.idea/appInsightsSettings.xml
deleted file mode 100644
--- a/.idea/appInsightsSettings.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ /dev/null	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="AppInsightsSettings">
-    <option name="selectedTabId" value="Android Vitals" />
-    <option name="tabSettings">
-      <map>
-        <entry key="Firebase Crashlytics">
-          <value>
-            <InsightsFilterSettings>
-              <option name="connection">
-                <ConnectionSetting>
-                  <option name="appId" value="PLACEHOLDER" />
-                  <option name="mobileSdkAppId" value="" />
-                  <option name="projectId" value="" />
-                  <option name="projectNumber" value="" />
-                </ConnectionSetting>
-              </option>
-              <option name="signal" value="SIGNAL_UNSPECIFIED" />
-              <option name="timeIntervalDays" value="THIRTY_DAYS" />
-              <option name="visibilityType" value="ALL" />
-            </InsightsFilterSettings>
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/pocketchef/RecipeActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.appcompat.widget.SearchView;\r\nimport androidx.constraintlayout.motion.widget.MotionLayout;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.appbar.MaterialToolbar;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Adapters.RandomRecipeAdapter;\r\nimport sg.edu.np.mad.pocketchef.Listener.RdmRecipeRespListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.RecipeClickListener;\r\nimport sg.edu.np.mad.pocketchef.Models.RandomRecipeApiResponse;\r\n\r\npublic class RecipeActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n    private static final String EXTRA_RECIPE_ID = \"id\";\r\n    private static final int SCROLL_THRESHOLD = 2;\r\n    private RequestManager requestManager;\r\n    private RecyclerView recyclerView;\r\n    private Spinner spinner;\r\n    private final List<String> tags = new ArrayList<>();\r\n    private SearchView searchView;\r\n    private ProgressBar progressBar;\r\n    private int previousScrollPosition = 0;\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    MaterialToolbar toolbar;\r\n    MenuItem nav_home, nav_recipes, nav_search;\r\n    View view;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_recipe);\r\n        // Intialise views and listener\r\n        setupViews();\r\n        setupListeners();\r\n        requestManager = new RequestManager(this);\r\n    }\r\n\r\n    private void setupViews() {\r\n        view = findViewById(R.id.recipe_details);\r\n        searchView = findViewById(R.id.searchView_home);\r\n        spinner = findViewById(R.id.spinner_tags);\r\n        recyclerView = findViewById(R.id.recycler_random_recipes);\r\n        progressBar = findViewById(R.id.progressBar);\r\n        // Navigation Menu set up\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        nav_home = navigationView.getMenu().findItem(R.id.nav_home);\r\n        nav_recipes = navigationView.getMenu().findItem(R.id.nav_recipes);\r\n        nav_search = navigationView.getMenu().findItem(R.id.nav_search);\r\n        // Spinner set up\r\n        ArrayAdapter<CharSequence> arrayAdapter = ArrayAdapter.createFromResource(\r\n                this,\r\n                R.array.tags,\r\n                R.layout.spinner_text\r\n        );\r\n        arrayAdapter.setDropDownViewResource(R.layout.spinner_inner_text);\r\n        spinner.setAdapter(arrayAdapter);\r\n        // Set up nav menu\r\n        navigationView.bringToFront();\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(RecipeActivity.this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        navigationView.setNavigationItemSelectedListener(RecipeActivity.this);\r\n        navigationView.setCheckedItem(nav_home);\r\n    }\r\n\r\n    private void setupListeners() {\r\n        searchView.setOnQueryTextListener(new SearchView.OnQueryTextListener() {\r\n            @Override\r\n            public boolean onQueryTextSubmit(String query) {\r\n                tags.clear();\r\n                tags.add(query);\r\n                fetchRandomRecipes();\r\n                return true;\r\n            }\r\n\r\n            @Override\r\n            public boolean onQueryTextChange(String newText) {\r\n                return false;\r\n            }\r\n        });\r\n\r\n        spinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                tags.clear();\r\n                tags.add(parent.getSelectedItem().toString());\r\n                fetchRandomRecipes();\r\n            }\r\n\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n            }\r\n        });\r\n\r\n        recyclerView.addOnScrollListener(new RecyclerView.OnScrollListener() {\r\n            @Override\r\n            public void onScrolled(@NonNull RecyclerView recyclerView, int dx, int dy) {\r\n                super.onScrolled(recyclerView, dx, dy);\r\n                if (dy > 0 && hasScrolledEnough()) { // Scrolling downwards\r\n                    transitionMotionLayoutToEnd();\r\n                } else if (dy < 0 && shouldTransitionToStart()) { // Scrolling upwards\r\n                    transitionMotionLayoutToStart();\r\n                }\r\n            }\r\n        });\r\n    }\r\n    // Methods for scrolling function, transition motion layout\r\n    private boolean hasScrolledEnough() {\r\n        LinearLayoutManager layoutManager = (LinearLayoutManager) recyclerView.getLayoutManager();\r\n        if (layoutManager != null && recyclerView.getAdapter() != null) {\r\n            int lastVisibleItemPosition = layoutManager.findLastVisibleItemPosition();\r\n            return lastVisibleItemPosition >= SCROLL_THRESHOLD;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private boolean shouldTransitionToStart() {\r\n        LinearLayoutManager layoutManager = (LinearLayoutManager) recyclerView.getLayoutManager();\r\n        if (layoutManager != null) {\r\n            int firstVisibleItemPosition = layoutManager.findFirstVisibleItemPosition();\r\n            return firstVisibleItemPosition <= SCROLL_THRESHOLD;\r\n        }\r\n        return false;\r\n    }\r\n    private void transitionMotionLayoutToEnd() {\r\n        MotionLayout motionLayout = findViewById(R.id.main);\r\n        motionLayout.transitionToEnd();\r\n    }\r\n\r\n    private void transitionMotionLayoutToStart() {\r\n        MotionLayout motionLayout = findViewById(R.id.main);\r\n        motionLayout.transitionToStart();\r\n    }\r\n    // Methods to call API\r\n    // Methods to fetch RandomRecipes\r\n    private void fetchRandomRecipes() {\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        requestManager.getRandomRecipes(new RdmRecipeRespListener() {\r\n            @Override\r\n            public void didFetch(RandomRecipeApiResponse response, String message) {\r\n                progressBar.setVisibility(View.GONE);\r\n                setupRandomRecipeRecyclerView(response);\r\n            }\r\n\r\n            @Override\r\n            public void didError(String message) {\r\n                progressBar.setVisibility(View.GONE);\r\n                Toast.makeText(RecipeActivity.this, message, Toast.LENGTH_SHORT).show();\r\n            }\r\n        }, tags);\r\n    }\r\n\r\n    private void setupRandomRecipeRecyclerView(RandomRecipeApiResponse response) {\r\n        recyclerView.setHasFixedSize(true);\r\n        recyclerView.setLayoutManager(new GridLayoutManager(RecipeActivity.this, 1));\r\n        RandomRecipeAdapter randomRecipeAdapter = new RandomRecipeAdapter(RecipeActivity.this, response.recipes, recipeClickListener);\r\n        recyclerView.setAdapter(randomRecipeAdapter);\r\n    }\r\n\r\n    private final RecipeClickListener recipeClickListener = id -> startActivity(new Intent(RecipeActivity.this, RecipeDetailsActivity.class)\r\n            .putExtra(EXTRA_RECIPE_ID, id));\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        int itemId = menuItem.getItemId();\r\n        if (itemId == R.id.nav_home) {\r\n            Intent intent = new Intent(RecipeActivity.this, MainActivity.class);\r\n            finish();\r\n            startActivity(intent);\r\n        } else if (itemId == R.id.nav_recipes) {\r\n            // Nothing happens\r\n        } else if (itemId == R.id.nav_search) {\r\n            Intent intent2 = new Intent(RecipeActivity.this, AdvancedSearchActivity.class);\r\n            finish();\r\n            startActivity(intent2);\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n    @Override\r\n    public void onPointerCaptureChanged(boolean hasCapture) {\r\n        super.onPointerCaptureChanged(hasCapture);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeActivity.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeActivity.java	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeActivity.java	(date 1716728268000)
@@ -180,11 +180,13 @@
     private void setupRandomRecipeRecyclerView(RandomRecipeApiResponse response) {
         recyclerView.setHasFixedSize(true);
         recyclerView.setLayoutManager(new GridLayoutManager(RecipeActivity.this, 1));
-        RandomRecipeAdapter randomRecipeAdapter = new RandomRecipeAdapter(RecipeActivity.this, response.recipes, recipeClickListener);
+        RandomRecipeAdapter randomRecipeAdapter = new RandomRecipeAdapter(RecipeActivity.this,
+                response.recipes, recipeClickListener);
         recyclerView.setAdapter(randomRecipeAdapter);
     }
 
-    private final RecipeClickListener recipeClickListener = id -> startActivity(new Intent(RecipeActivity.this, RecipeDetailsActivity.class)
+    private final RecipeClickListener recipeClickListener = id ->
+            startActivity(new Intent(RecipeActivity.this, RecipeDetailsActivity.class)
             .putExtra(EXTRA_RECIPE_ID, id));
 
     @Override
@@ -200,6 +202,10 @@
             Intent intent2 = new Intent(RecipeActivity.this, AdvancedSearchActivity.class);
             finish();
             startActivity(intent2);
+        }else if(itemId == R.id.nav_shoppinglist){
+            Intent intent2 = new Intent(RecipeActivity.this, CreateCategoryActivity.class);
+            finish();
+            startActivity(intent2);
         }
         drawerLayout.closeDrawer(GravityCompat.START);
         return true;
Index: app/src/main/java/sg/edu/np/mad/pocketchef/ShowCollectActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/ShowCollectActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/ShowCollectActivity.java
new file mode 100644
--- /dev/null	(date 1716785764000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/ShowCollectActivity.java	(date 1716785764000)
@@ -0,0 +1,214 @@
+package sg.edu.np.mad.pocketchef;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.view.MenuItem;
+import android.view.View;
+
+import androidx.activity.EdgeToEdge;
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.ActionBarDrawerToggle;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.graphics.Insets;
+import androidx.core.view.GravityCompat;
+import androidx.core.view.ViewCompat;
+import androidx.core.view.WindowInsetsCompat;
+import androidx.drawerlayout.widget.DrawerLayout;
+import androidx.recyclerview.widget.LinearLayoutManager;
+
+import com.bumptech.glide.Glide;
+import com.google.android.material.appbar.MaterialToolbar;
+import com.google.android.material.navigation.NavigationView;
+import com.kongzue.dialogx.dialogs.BottomMenu;
+import com.kongzue.dialogx.dialogs.PopTip;
+import com.kongzue.dialogx.dialogs.WaitDialog;
+import com.kongzue.dialogx.interfaces.OnMenuItemClickListener;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
+import sg.edu.np.mad.pocketchef.Models.Recipe;
+import sg.edu.np.mad.pocketchef.Models.RecipeDetailsC;
+import sg.edu.np.mad.pocketchef.base.AppDatabase;
+import sg.edu.np.mad.pocketchef.base.CommonAdapter;
+import sg.edu.np.mad.pocketchef.databinding.ActivityShowCollectBinding;
+import sg.edu.np.mad.pocketchef.databinding.ListRandomRecipeBinding;
+
+public class ShowCollectActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
+
+    ActivityShowCollectBinding binding;
+    MaterialToolbar toolbar;
+    NavigationView navigationView;
+    DrawerLayout drawerLayout;
+    MenuItem nav_home, nav_recipes, nav_search;
+
+    private List<CategoryBean> otherCollect;
+    private List<String> otherCollectname;
+
+    private CommonAdapter<ListRandomRecipeBinding,RecipeDetailsC> commonAdapter;
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        EdgeToEdge.enable(this);
+        binding = ActivityShowCollectBinding.inflate(getLayoutInflater());
+        setContentView(binding.getRoot());
+        toolbar = findViewById(R.id.toolbar);
+        drawerLayout = findViewById(R.id.drawer_layout);
+        navigationView = findViewById(R.id.nav_view);
+        nav_home = navigationView.getMenu().findItem(R.id.nav_home);
+        navigationView.bringToFront();
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this,
+                drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+        drawerLayout.addDrawerListener(toggle);
+        toggle.syncState();
+        navigationView.setNavigationItemSelectedListener(ShowCollectActivity.this);
+        navigationView.setCheckedItem(nav_home);
+        binding.rv.setLayoutManager(new LinearLayoutManager(this));
+        commonAdapter =new CommonAdapter<ListRandomRecipeBinding, RecipeDetailsC>(new ArrayList<>()) {
+            @Override
+            protected int getType(int position) {
+                return 0;
+            }
+
+            @Override
+            protected void show(ListRandomRecipeBinding holder, int position, RecipeDetailsC recipe) {
+                Glide.with(ShowCollectActivity.this).load(recipe.imagPath)
+                        .into(holder.imageViewFood);
+                holder.textViewServings.setText(recipe.meal_servings);
+                holder.textViewTitle.setText(recipe.meal_name);
+                holder.textViewTime.setText(recipe.meal_price);
+                holder.randomListContainer.setOnLongClickListener(new View.OnLongClickListener() {
+                    @Override
+                    public boolean onLongClick(View v) {
+                        String title = "delete";
+                        String[] name;
+                        if(otherCollectname==null||otherCollectname.isEmpty()){
+                            name =new String[0];
+                        }else{
+                           name = otherCollectname.toArray(new String[0]);
+                        }
+                        String[] mergedArray = new String[name.length + 1];
+                        int i=0;
+                        mergedArray[0] = title;
+                        for (i = 1; i <=name.length; i++) {
+                            mergedArray[i] = "move to " +name[i-1];
+                        }
+                        BottomMenu.show(mergedArray).setMessage("edit").setOnMenuItemClickListener(new OnMenuItemClickListener<BottomMenu>() {
+                            @Override
+                            public boolean onClick(BottomMenu dialog, CharSequence text, int index) {
+                                if(index!=0){
+                                    WaitDialog.show("loading...");
+                                    new Thread(new Runnable() {
+                                        @Override
+                                        public void run() {
+                                            recipe.categoryBeanId = otherCollectname.get(index-1);
+                                            AppDatabase.getInstance(ShowCollectActivity.this)
+                                                            .RecipeDetailsCDao().update(recipe);
+                                            runOnUiThread(new Runnable() {
+                                                @Override
+                                                public void run() {
+                                                    WaitDialog.dismiss();
+                                                    data.remove(recipe);
+                                                    commonAdapter.notifyDataSetChanged();
+                                                    PopTip.show("success");
+                                                }
+                                            });
+                                        }
+                                    }).start();
+                                }else if(index==0){
+                                    WaitDialog.show("loading...");
+                                    new Thread(new Runnable() {
+                                        @Override
+                                        public void run() {
+                                            AppDatabase.getInstance(ShowCollectActivity.this)
+                                                    .RecipeDetailsCDao().delete(recipe);
+                                            data.remove(recipe);
+                                            runOnUiThread(new Runnable() {
+                                                @Override
+                                                public void run() {
+                                                    WaitDialog.dismiss();
+                                                    commonAdapter.notifyDataSetChanged();
+                                                    PopTip.show("success");
+                                                }
+                                            });
+                                        }
+                                    }).start();
+                                }
+                                return false;
+                            }
+                        });
+                        return true;
+                    }
+                });
+                holder.randomListContainer.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        Intent intent =new Intent(ShowCollectActivity.this,RecipeDetailsActivity.class);
+                        intent.putExtra(EXTRA_RECIPE_ID, recipe.recipeDetailsResponseId+"");
+                        startActivity(intent);
+                    }
+                });
+            }
+        };
+        binding.rv.setAdapter(commonAdapter);
+        init();
+    }
+    List<RecipeDetailsC> data;
+    private static final String EXTRA_RECIPE_ID = "id";
+    private void init(){
+        String name  = getIntent().getStringExtra("id");
+        toolbar.setTitle(name);
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+               data = AppDatabase.getInstance(ShowCollectActivity.this).RecipeDetailsCDao()
+                        .getByCategoryBeanId(name);
+                runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        commonAdapter.setData(data);
+                    }
+                });
+            }
+        }).start();
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                otherCollectname = new ArrayList<>();
+                otherCollect = AppDatabase.getInstance(ShowCollectActivity.this)
+                        .categoryDao().getAllCategories();
+                for(int i=0;i<otherCollect.size();i++){
+                    if(!otherCollect.get(i).text.equals(name)){
+                       String collect_name = otherCollect.get(i).text;
+                       otherCollectname.add(collect_name);
+                    }
+                }
+            }
+        }).start();
+    }
+
+    @Override
+    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {
+        int itemId = menuItem.getItemId();
+        if (itemId == R.id.nav_home) {
+            Intent intent = new Intent(ShowCollectActivity.this, MainActivity.class);
+            finish();
+            startActivity(intent);
+        } else if (itemId == R.id.nav_recipes) {
+            Intent intent2 = new Intent(ShowCollectActivity.this, RecipeActivity.class);
+            finish();
+            startActivity(intent2);
+        } else if (itemId == R.id.nav_search) {
+            Intent intent2 = new Intent(ShowCollectActivity.this, AdvancedSearchActivity.class);
+            finish();
+            startActivity(intent2);
+        }else if(itemId == R.id.nav_shoppinglist){
+            Intent intent2 = new Intent(ShowCollectActivity.this, CreateCategoryActivity.class);
+            finish();
+            startActivity(intent2);
+        }
+        drawerLayout.closeDrawer(GravityCompat.START);
+        return true;
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_show_collect.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_show_collect.xml b/app/src/main/res/layout/activity_show_collect.xml
new file mode 100644
--- /dev/null	(date 1716831346283)
+++ b/app/src/main/res/layout/activity_show_collect.xml	(date 1716831346283)
@@ -0,0 +1,51 @@
+<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context=".MainActivity">
+
+    <com.google.android.material.navigation.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        app:headerLayout="@layout/header"
+        app:menu="@menu/main_menu" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/recipe_details"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@color/paletteorange"
+        android:clickable="true"
+        android:focusable="true">
+
+        <com.google.android.material.appbar.MaterialToolbar
+            android:id="@+id/toolbar"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:background="@color/paletteblue"
+            android:minHeight="?attr/actionBarSize"
+            app:contentInsetStart="0dp"
+            app:contentInsetStartWithNavigation="0dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:navigationIcon="@drawable/ic_launcher_foreground"
+            app:title="" />
+
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rv"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_marginTop="80dp"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+</androidx.drawerlayout.widget.DrawerLayout>
Index: app/src/main/java/sg/edu/np/mad/pocketchef/Dao/RecipeDetailsCDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/RecipeDetailsCDao.java b/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/RecipeDetailsCDao.java
new file mode 100644
--- /dev/null	(date 1716775354000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/RecipeDetailsCDao.java	(date 1716775354000)
@@ -0,0 +1,35 @@
+package sg.edu.np.mad.pocketchef.Dao;
+
+import androidx.room.Dao;
+import androidx.room.Delete;
+import androidx.room.Insert;
+import androidx.room.Query;
+import androidx.room.Update;
+
+import java.util.List;
+
+import sg.edu.np.mad.pocketchef.Models.RecipeDetailsC;
+
+@Dao
+public interface RecipeDetailsCDao {
+    @Insert
+    void insert(RecipeDetailsC recipeDetailsC);
+
+
+    @Update
+    void update(RecipeDetailsC recipeDetailsC);
+
+    @Delete
+    void delete(RecipeDetailsC recipeDetailsC);
+
+    @Query("DELETE FROM RecipeDetailsC WHERE categoryBeanId = :categoryBeanId")
+    void deleteByCategoryBeanId(String categoryBeanId);
+
+    @Query("SELECT * FROM RecipeDetailsC WHERE recipeDetailsResponseId = :responseId")
+    RecipeDetailsC getByRecipeDetailsResponseId(int responseId);
+    @Query("SELECT * FROM RecipeDetailsC WHERE categoryBeanId = :categoryBeanId")
+    List<RecipeDetailsC> getByCategoryBeanId(String categoryBeanId);
+
+    @Query("SELECT * FROM RecipeDetailsC")
+    List<RecipeDetailsC> getAll();
+}
\ No newline at end of file
Index: app/src/main/res/menu/main_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n\r\n    <group>\r\n        <item\r\n            android:id=\"@+id/nav_home\"\r\n            android:icon=\"@drawable/ic_home\"\r\n            android:title=\"Home\" />\r\n        <item\r\n            android:id=\"@+id/nav_recipes\"\r\n            android:icon=\"@drawable/ic_recipes\"\r\n            android:title=\"Recipes\" />\r\n        <item\r\n            android:id=\"@+id/nav_search\"\r\n            android:icon=\"@drawable/ic_search_menu\"\r\n            android:title=\"Advanced Search\" />\r\n        <item\r\n            android:id=\"@+id/nav_shoppinglist\"\r\n            android:icon=\"@drawable/ic_shopping_list\"\r\n            android:title=\"shopping list\" />\r\n    </group>\r\n        <item android:title=\"Profile\">\r\n            <menu>\r\n                <group android:checkableBehavior=\"single\">\r\n                <item\r\n                    android:id=\"@+id/nav_login\"\r\n                    android:icon=\"@drawable/ic_login\"\r\n                    android:title=\"Login\" />\r\n                <item\r\n                    android:id=\"@+id/nav_profile\"\r\n                    android:icon=\"@drawable/ic_profile\"\r\n                    android:title=\"Profile\" />\r\n                <item\r\n                    android:id=\"@+id/nav_logout\"\r\n                    android:icon=\"@drawable/ic_logout\"\r\n                    android:title=\"Logout\" />\r\n                </group>\r\n            </menu>\r\n        </item>\r\n    <item android:title=\"Additional Features\">\r\n        <menu>\r\n            <item\r\n                android:id=\"@+id/nav_addfeature1\"\r\n                android:icon=\"@drawable/pocketchef_logo\"\r\n                android:title=\"feature1\" />\r\n            <item\r\n                android:id=\"@+id/nav_addfeature2\"\r\n                android:icon=\"@drawable/pocketchef_logo\"\r\n                android:title=\"feature2\" />\r\n            <item\r\n                android:id=\"@+id/nav_addfeature3\"\r\n                android:icon=\"@drawable/pocketchef_logo\"\r\n                android:title=\"feature3\" />\r\n        </menu>\r\n    </item>\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/main_menu.xml b/app/src/main/res/menu/main_menu.xml
--- a/app/src/main/res/menu/main_menu.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/res/menu/main_menu.xml	(date 1716722802000)
@@ -17,7 +17,7 @@
         <item
             android:id="@+id/nav_shoppinglist"
             android:icon="@drawable/ic_shopping_list"
-            android:title="shopping list" />
+            android:title="Favorite List" />
     </group>
         <item android:title="Profile">
             <menu>
Index: app/src/main/java/sg/edu/np/mad/pocketchef/Models/RecipeDetailsC.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/Models/RecipeDetailsC.java b/app/src/main/java/sg/edu/np/mad/pocketchef/Models/RecipeDetailsC.java
new file mode 100644
--- /dev/null	(date 1716779092000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/Models/RecipeDetailsC.java	(date 1716779092000)
@@ -0,0 +1,19 @@
+package sg.edu.np.mad.pocketchef.Models;
+
+import androidx.room.Entity;
+import androidx.room.PrimaryKey;
+
+@Entity
+public class RecipeDetailsC {
+
+    @PrimaryKey(autoGenerate = true)
+    public int id;
+    public  String meal_price;
+    public String meal_servings;
+    public String meal_ready;
+    public String imagPath;
+    public int recipeDetailsResponseId;
+    public String categoryBeanId;
+    public String meal_name;
+
+}
Index: .idea/deploymentTargetSelector.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"deploymentTargetSelector\">\r\n    <selectionStates>\r\n      <SelectionState runConfigName=\"app\">\r\n        <option name=\"selectionMode\" value=\"DROPDOWN\" />\r\n        <DropdownSelection timestamp=\"2024-05-22T00:42:21.217959700Z\">\r\n          <Target type=\"DEFAULT_BOOT\">\r\n            <handle>\r\n              <DeviceId pluginId=\"LocalEmulator\" identifier=\"path=C:\\Users\\iijay\\.android\\avd\\Pixel_8_Pro_API_33.avd\" />\r\n            </handle>\r\n          </Target>\r\n        </DropdownSelection>\r\n        <DialogSelection />\r\n      </SelectionState>\r\n    </selectionStates>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/deploymentTargetSelector.xml b/.idea/deploymentTargetSelector.xml
--- a/.idea/deploymentTargetSelector.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/.idea/deploymentTargetSelector.xml	(date 1716630124000)
@@ -4,10 +4,10 @@
     <selectionStates>
       <SelectionState runConfigName="app">
         <option name="selectionMode" value="DROPDOWN" />
-        <DropdownSelection timestamp="2024-05-22T00:42:21.217959700Z">
+        <DropdownSelection timestamp="2024-05-25T09:36:04.035313500Z">
           <Target type="DEFAULT_BOOT">
             <handle>
-              <DeviceId pluginId="LocalEmulator" identifier="path=C:\Users\iijay\.android\avd\Pixel_8_Pro_API_33.avd" />
+              <DeviceId pluginId="Default" identifier="serial=127.0.0.1:21503;connection=96564fef" />
             </handle>
           </Target>
         </DropdownSelection>
Index: app/src/main/res/layout/list_instructions_step_items.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<com.google.android.material.card.MaterialCardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"wrap_content\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"4dp\"\r\n    app:cardBackgroundColor=\"@color/white\"\r\n    app:cardElevation=\"8dp\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView_instructions_step_items\"\r\n            android:layout_width=\"80dp\"\r\n            android:layout_height=\"50dp\"\r\n            android:layout_marginTop=\"8dp\"\r\n            android:layout_marginBottom=\"8dp\"\r\n            android:contentDescription=\"@string/imageView_instruction_step_items_Image\"\r\n            android:scaleType=\"center\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView_instructions_step_item\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:ellipsize=\"marquee\"\r\n            android:marqueeRepeatLimit=\"marquee_forever\"\r\n            android:padding=\"4dp\"\r\n            android:scrollHorizontally=\"true\"\r\n            android:singleLine=\"true\"\r\n            android:text=\"@string/textView_instruction_step_item_text\"\r\n            android:textAlignment=\"center\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"18sp\"\r\n            android:textStyle=\"normal\" />\r\n    </LinearLayout>\r\n\r\n</com.google.android.material.card.MaterialCardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/list_instructions_step_items.xml b/app/src/main/res/layout/list_instructions_step_items.xml
--- a/app/src/main/res/layout/list_instructions_step_items.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/res/layout/list_instructions_step_items.xml	(date 1716741790000)
@@ -15,7 +15,7 @@
         <ImageView
             android:id="@+id/imageView_instructions_step_items"
             android:layout_width="80dp"
-            android:layout_height="50dp"
+            android:layout_height="51dp"
             android:layout_marginTop="8dp"
             android:layout_marginBottom="8dp"
             android:contentDescription="@string/imageView_instruction_step_items_Image"
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><androidx.drawerlayout.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:fitsSystemWindows=\"true\"\r\n    tools:context=\".MainActivity\"\r\n    >\r\n\r\n    <com.google.android.material.navigation.NavigationView\r\n        android:id=\"@+id/nav_view\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        app:headerLayout=\"@layout/header\"\r\n        app:menu=\"@menu/main_menu\" />\r\n\r\n    <androidx.constraintlayout.motion.widget.MotionLayout\r\n        android:id=\"@+id/main_activity\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:background=\"@color/palettebeige\"\r\n        app:layoutDescription=\"@xml/activity_main_scene\">\r\n\r\n        <com.google.android.material.appbar.MaterialToolbar\r\n            android:id=\"@+id/toolbar\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:background=\"@color/paletteblue\"\r\n            android:minHeight=\"?attr/actionBarSize\"\r\n            app:contentInsetStart=\"0dp\"\r\n            app:contentInsetStartWithNavigation=\"0dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:navigationIcon=\"@drawable/ic_launcher_foreground\" />\r\n\r\n        <com.google.android.material.textview.MaterialTextView\r\n            android:id=\"@+id/textView_title\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:layout_marginTop=\"24dp\"\r\n            android:fontFamily=\"@font/montserrat\"\r\n            android:text=\"@string/textView_title_text\"\r\n            android:textAppearance=\"@style/TextAppearance.Material3.TitleMedium\"\r\n            android:textColor=\"@color/black\"\r\n            android:textSize=\"30sp\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_vertical\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/toolbar\" />\r\n\r\n        <com.google.android.material.textview.MaterialTextView\r\n            android:id=\"@+id/textView_title_subtitle\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"16dp\"\r\n            android:fontFamily=\"@font/opensans\"\r\n            android:text=\"@string/textView_title_subtitle\"\r\n            android:textColor=\"@color/palettedarkblue\"\r\n            app:layout_constraintEnd_toStartOf=\"@+id/guideline_vertical\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/textView_title\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView_logo\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"160dp\"\r\n            android:layout_marginEnd=\"16dp\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toEndOf=\"@+id/guideline_vertical\"\r\n            app:layout_constraintTop_toBottomOf=\"@+id/toolbar\"\r\n            app:srcCompat=\"@drawable/pocketchef_logo\" />\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/cardView_welcome\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"16dp\"\r\n            app:cardBackgroundColor=\"@color/paletteorange\"\r\n            app:cardCornerRadius=\"8dp\"\r\n            app:cardElevation=\"4dp\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintStart_toStartOf=\"parent\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\"\r\n                android:orientation=\"vertical\"\r\n                android:padding=\"16dp\">\r\n\r\n                <com.google.android.material.textview.MaterialTextView\r\n                    android:id=\"@+id/textView_welcome_message\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"16dp\"\r\n                    android:fontFamily=\"@font/montserrat\"\r\n                    android:text=\"Welcome Back,\"\r\n                    android:textAlignment=\"center\"\r\n                    android:textAppearance=\"@style/TextAppearance.MaterialComponents.Headline6\"\r\n                    android:textColor=\"@color/palettedarkblue\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n                <com.google.android.material.textview.MaterialTextView\r\n                    android:id=\"@+id/textView_username\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginTop=\"8dp\"\r\n                    android:fontFamily=\"@font/opensans\"\r\n                    android:text=\"UserName\"\r\n                    android:textAlignment=\"center\"\r\n                    android:textAppearance=\"@style/TextAppearance.MaterialComponents.Subtitle1\"\r\n                    android:textColor=\"@color/paletteblue\"\r\n                    app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                    app:layout_constraintEnd_toEndOf=\"parent\"\r\n                    app:layout_constraintStart_toStartOf=\"parent\"\r\n                    app:layout_constraintTop_toBottomOf=\"@id/textView_welcome_message\" />\r\n            </LinearLayout>\r\n\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <androidx.constraintlayout.widget.Guideline\r\n            android:id=\"@+id/guideline_vertical\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"vertical\"\r\n            app:layout_constraintGuide_percent=\"0.5\" />\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/cardView1\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"10dp\"\r\n            android:visibility=\"gone\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"@string/cardView1_title_text\"\r\n                    android:textSize=\"24sp\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/imageView_buttonlogo1\"\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"100dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"15dp\"\r\n                    app:srcCompat=\"@drawable/ic_recipes\" />\r\n            </RelativeLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/cardView2\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"10dp\"\r\n            android:visibility=\"gone\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"@string/cardView2_title_text\"\r\n                    android:textSize=\"24sp\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/imageView_buttonlogo2\"\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"100dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"15dp\"\r\n                    app:srcCompat=\"@drawable/ic_search_menu\" />\r\n            </RelativeLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/cardView3\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"10dp\"\r\n            android:visibility=\"gone\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"@string/cardview3_text\"\r\n                    android:textSize=\"24sp\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/imageView_buttonlogo3\"\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"100dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"15dp\"\r\n                    app:srcCompat=\"@drawable/ic_btn_star\" />\r\n            </RelativeLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/cardView4\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"10dp\"\r\n            android:visibility=\"gone\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"@string/cardView_6_text\"\r\n                    android:textSize=\"24sp\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/imageView_buttonlogo4\"\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"100dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"15dp\"\r\n                    app:srcCompat=\"@drawable/mad_icons\" />\r\n            </RelativeLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/cardView5\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"10dp\"\r\n            android:visibility=\"gone\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"Feature 5\"\r\n                    android:textSize=\"24sp\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/imageView_buttonlogo5\"\r\n                    android:layout_width=\"100dp\"\r\n                    android:layout_height=\"100dp\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"15dp\"\r\n                    app:srcCompat=\"@drawable/ic_launcher_foreground\" />\r\n            </RelativeLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n\r\n        <com.google.android.material.card.MaterialCardView\r\n            android:id=\"@+id/cardView6\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_margin=\"10dp\"\r\n            android:visibility=\"gone\">\r\n\r\n            <RelativeLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"match_parent\">\r\n\r\n                <TextView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"10dp\"\r\n                    android:text=\"Feature 6\"\r\n                    android:textSize=\"24sp\" />\r\n\r\n                <ImageView\r\n                    android:id=\"@+id/imageView_buttonlogo6\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_centerHorizontal=\"true\"\r\n                    android:layout_marginTop=\"15dp\"\r\n                    app:srcCompat=\"@drawable/ic_launcher_foreground\" />\r\n            </RelativeLayout>\r\n        </com.google.android.material.card.MaterialCardView>\r\n    </androidx.constraintlayout.motion.widget.MotionLayout>\r\n</androidx.drawerlayout.widget.DrawerLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1716722752000)
@@ -1,4 +1,5 @@
-<androidx.drawerlayout.widget.DrawerLayout xmlns:android="http://schemas.android.com/apk/res/android"
+<androidx.drawerlayout.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:app="http://schemas.android.com/apk/res-auto"
     xmlns:tools="http://schemas.android.com/tools"
     android:id="@+id/drawer_layout"
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"VisualizationToolProject\">\r\n    <option name=\"state\">\r\n      <ProjectState>\r\n        <option name=\"scale\" value=\"0.7635135135135135\" />\r\n      </ProjectState>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/.idea/misc.xml	(date 1716807555916)
@@ -6,11 +6,4 @@
   <component name="ProjectType">
     <option name="id" value="Android" />
   </component>
-  <component name="VisualizationToolProject">
-    <option name="state">
-      <ProjectState>
-        <option name="scale" value="0.7635135135135135" />
-      </ProjectState>
-    </option>
-  </component>
 </project>
\ No newline at end of file
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n<!--    new-->\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.pocketchef\"\r\n        tools:targetApi=\"31\">\r\n        <activity\r\n            android:name=\".ProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".EditProfileActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".AdvancedSearchActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".SearchedRecipesOutput\"\r\n            android:exported=\"false\"/>\r\n        <activity\r\n            android:name=\".RecipeActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:name=\".RecipeDetailsActivity\"\r\n            android:exported=\"false\" />\r\n        <activity\r\n            android:theme=\"@style/Theme.StartApp\"\r\n\r\n\r\n            android:name=\".MainActivity\"\r\n            android:exported=\"true\" />\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"true\"\r\n            android:theme=\"@style/Theme.pocketchef\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n    </application>\r\n\r\n</manifest>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/AndroidManifest.xml	(date 1716821547662)
@@ -1,8 +1,9 @@
 <?xml version="1.0" encoding="utf-8"?>
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools">
+
     <uses-permission android:name="android.permission.INTERNET" />
-<!--    new-->
+
     <application
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
@@ -14,6 +15,12 @@
         android:theme="@style/Theme.pocketchef"
         tools:targetApi="31">
         <activity
+            android:name=".ShowCollectActivity"
+            android:exported="false" />
+        <activity
+            android:name=".CreateCategoryActivity"
+            android:exported="false" />
+        <activity
             android:name=".ProfileActivity"
             android:exported="false" />
         <activity
@@ -24,7 +31,7 @@
             android:exported="false" />
         <activity
             android:name=".SearchedRecipesOutput"
-            android:exported="false"/>
+            android:exported="false" />
         <activity
             android:name=".RecipeActivity"
             android:exported="false" />
@@ -32,21 +39,19 @@
             android:name=".RecipeDetailsActivity"
             android:exported="false" />
         <activity
-            android:theme="@style/Theme.StartApp"
-
-
             android:name=".MainActivity"
-            android:exported="true" />
-        <activity
-            android:name=".LoginActivity"
             android:exported="true"
-            android:theme="@style/Theme.pocketchef">
+            android:theme="@style/Theme.StartApp">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
 
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+        <activity
+            android:name=".LoginActivity"
+            android:exported="true"
+            android:theme="@style/Theme.pocketchef" />
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/res/layout/list_random_recipe.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<com.google.android.material.card.MaterialCardView xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:id=\"@+id/random_list_container\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_margin=\"8dp\"\r\n    android:background=\"@color/white\"\r\n    android:elevation=\"8dp\">\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"vertical\">\r\n\r\n        <TextView\r\n            android:id=\"@+id/textView_title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:ellipsize=\"marquee\"\r\n            android:marqueeRepeatLimit=\"marquee_forever\"\r\n            android:padding=\"8dp\"\r\n            android:scrollHorizontally=\"true\"\r\n            android:singleLine=\"true\"\r\n            android:text=\"@string/textView_title_text\"\r\n            android:textColor=\"@color/paletteorange\"\r\n            android:textSize=\"24sp\"\r\n            android:textStyle=\"bold\" />\r\n\r\n        <ImageView\r\n            android:id=\"@+id/imageView_food\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"200dp\"\r\n            android:layout_marginVertical=\"8dp\"\r\n            android:scaleType=\"centerCrop\" />\r\n\r\n        <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:orientation=\"horizontal\">\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:gravity=\"center\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <ImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:src=\"@drawable/ic_servings\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/textView_servings\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:padding=\"4dp\"\r\n                    android:text=\"@string/textView_servings_text\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"14sp\" />\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:gravity=\"center\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <ImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:src=\"@drawable/ic_upvote\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/textView_upvote\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:text=\"@string/textView_servings_text\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"14sp\"\r\n                    android:padding=\"4dp\"/>\r\n\r\n            </LinearLayout>\r\n\r\n            <LinearLayout\r\n                android:layout_width=\"0dp\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_weight=\"1\"\r\n                android:gravity=\"center\"\r\n                android:orientation=\"vertical\">\r\n\r\n                <ImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:src=\"@drawable/ic_time\" />\r\n\r\n                <TextView\r\n                    android:id=\"@+id/textView_time\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:padding=\"4dp\"\r\n                    android:text=\"@string/textView_servings_text\"\r\n                    android:textColor=\"@color/black\"\r\n                    android:textSize=\"14sp\" />\r\n            </LinearLayout>\r\n        </LinearLayout>\r\n    </LinearLayout>\r\n\r\n</com.google.android.material.card.MaterialCardView>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/list_random_recipe.xml b/app/src/main/res/layout/list_random_recipe.xml
--- a/app/src/main/res/layout/list_random_recipe.xml	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/res/layout/list_random_recipe.xml	(date 1716742670000)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="utf-8"?>
-<com.google.android.material.card.MaterialCardView xmlns:android="http://schemas.android.com/apk/res/android"
+<com.google.android.material.card.MaterialCardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
     android:id="@+id/random_list_container"
     android:layout_width="match_parent"
     android:layout_height="wrap_content"
Index: app/src/main/java/sg/edu/np/mad/pocketchef/AdvancedSearchActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport static android.app.PendingIntent.getActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.view.MenuItem;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.activity.OnBackPressedCallback;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\n\r\nimport com.google.android.material.appbar.MaterialToolbar;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\npublic class AdvancedSearchActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener{\r\n    //Defining variables\r\n\r\n    //For menu\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    MaterialToolbar toolbar;\r\n    MenuItem nav_home, nav_recipes, nav_search;\r\n\r\n    //For user input\r\n    private Spinner dietSpinner;\r\n    private Spinner intolerancesSpinner;\r\n    private EditText queryEdit;\r\n    private EditText excludeIngredientsEdit;\r\n    private EditText minCarbsEdit;\r\n    private EditText maxCarbsEdit;\r\n    private EditText minProteinEdit;\r\n    private EditText maxProteinEdit;\r\n    private EditText minCaloriesEdit;\r\n    private EditText maxCaloriesEdit;\r\n    private String query;\r\n    private String excludeIngredients;\r\n    private Integer minCarbs;\r\n    private Integer maxCarbs;\r\n    private Integer minProtein;\r\n    private Integer maxProtein;\r\n    private Integer minCalories;\r\n    private Integer maxCalories;\r\n    private String diet;\r\n    private String intolerances;\r\n    private Button searchButton;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_advanced_search);\r\n        //Settting up views and listeners\r\n        setupViews();\r\n        setupListeners();\r\n    }\r\n\r\n    //Setting up views\r\n    private void setupViews() {\r\n        dietSpinner = findViewById(R.id.diet_spinner);\r\n        intolerancesSpinner =findViewById(R.id.intolerances_spinner);\r\n        searchButton = findViewById(R.id.searchButton);\r\n        // Navigation Menu set up\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        nav_home = navigationView.getMenu().findItem(R.id.nav_home);\r\n        nav_recipes = navigationView.getMenu().findItem(R.id.nav_recipes);\r\n        nav_search = navigationView.getMenu().findItem(R.id.nav_search);\r\n        // Set up nav menu\r\n        navigationView.bringToFront();\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(AdvancedSearchActivity.this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        navigationView.setNavigationItemSelectedListener(AdvancedSearchActivity.this);\r\n        navigationView.setCheckedItem(nav_home);\r\n    }\r\n\r\n    // Setting up listeners\r\n    public void setupListeners(){\r\n        //Check if search button has been clicked\r\n        searchButton.setOnClickListener(v -> {\r\n            // Getting user inputs\r\n            queryEdit = findViewById(R.id.searchByName);\r\n            excludeIngredientsEdit = findViewById(R.id.excludeIngredients);\r\n            minCarbsEdit = findViewById(R.id.editMinCarbs);\r\n            maxCarbsEdit = findViewById(R.id.editMaxCarbs);\r\n            minProteinEdit = findViewById(R.id.editMinProtein);\r\n            maxProteinEdit = findViewById(R.id.editMaxProtein);\r\n            minCaloriesEdit = findViewById(R.id.editMinCalories);\r\n            maxCaloriesEdit = findViewById(R.id.editMaxCalories);\r\n\r\n            //Data validation to see if there are inputs, if don't have assign default value\r\n            try {\r\n                query = queryEdit.getText().toString();\r\n            } catch (Exception ex) {\r\n                query = null;\r\n            }\r\n\r\n            try {\r\n                excludeIngredients = excludeIngredientsEdit.getText().toString();\r\n            } catch (Exception ex) {\r\n                excludeIngredients = null;\r\n            }\r\n\r\n            try {\r\n                minCarbs = Integer.parseInt(minCarbsEdit.getText().toString());\r\n            } catch (Exception ex) {\r\n                minCarbs = 0;\r\n            }\r\n\r\n            try {\r\n                maxCarbs = Integer.parseInt(maxCarbsEdit.getText().toString());\r\n            } catch (Exception ex) {\r\n                maxCarbs = 2147483647;\r\n            }\r\n\r\n            try {\r\n                minProtein = Integer.parseInt(minProteinEdit.getText().toString());\r\n            } catch (Exception ex) {\r\n                minProtein = 0;\r\n            }\r\n\r\n            try {\r\n                maxProtein = Integer.parseInt(maxProteinEdit.getText().toString());\r\n            } catch (Exception ex) {\r\n                maxProtein = 2147483647;\r\n            }\r\n\r\n            try {\r\n                minCalories = Integer.parseInt(minCaloriesEdit.getText().toString());\r\n            } catch (Exception ex) {\r\n                minCalories = 0;\r\n            }\r\n\r\n            try {\r\n                maxCalories = Integer.parseInt(maxCaloriesEdit.getText().toString());\r\n            } catch (Exception ex) {\r\n                maxCalories = 2147483647;\r\n            }\r\n\r\n            try {\r\n                diet = dietSpinner.getSelectedItem().toString();\r\n                if (diet.equals(\"None\")){\r\n                    throw new Exception();\r\n                }\r\n            } catch (Exception ex) {\r\n                diet = null;\r\n            }\r\n\r\n            try {\r\n                intolerances = intolerancesSpinner.getSelectedItem().toString();\r\n                if (intolerances.equals(\"None\")){\r\n                    throw new Exception();\r\n                }\r\n            } catch (Exception ex) {\r\n                intolerances = null;\r\n            }\r\n\r\n            //Sending the data to Advanced Search Activity\r\n            Intent intent = new Intent(AdvancedSearchActivity.this, SearchedRecipesOutput.class);\r\n            Bundle userInput = new Bundle();\r\n            userInput.putString(\"query\",query);\r\n            userInput.putString(\"excludeIngredients\",excludeIngredients);\r\n            userInput.putInt(\"minCarbs\",minCarbs);\r\n            userInput.putInt(\"maxCarbs\",maxCarbs);\r\n            userInput.putInt(\"minProtein\",minProtein);\r\n            userInput.putInt(\"maxProtein\",maxProtein);\r\n            userInput.putInt(\"minCalories\",minCalories);\r\n            userInput.putInt(\"maxCalories\",maxCalories);\r\n            userInput.putString(\"diet\",diet);\r\n            userInput.putString(\"intolerances\",intolerances);\r\n            intent.putExtras(userInput);\r\n            startActivity(intent);\r\n        });\r\n    }\r\n\r\n    //For menu\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        int itemId = menuItem.getItemId();\r\n        if (itemId == R.id.nav_home) {\r\n            Intent intent = new Intent(AdvancedSearchActivity.this, MainActivity.class);\r\n            finish();\r\n            startActivity(intent);\r\n        } else if (itemId == R.id.nav_recipes) {\r\n            Intent intent2 = new Intent(AdvancedSearchActivity.this, RecipeActivity.class);\r\n            finish();\r\n            startActivity(intent2);\r\n        } else if (itemId == R.id.nav_search) {\r\n            // Nothing happens\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/AdvancedSearchActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/AdvancedSearchActivity.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/AdvancedSearchActivity.java	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/AdvancedSearchActivity.java	(date 1716724290000)
@@ -197,6 +197,10 @@
             startActivity(intent2);
         } else if (itemId == R.id.nav_search) {
             // Nothing happens
+        }else if(itemId == R.id.nav_shoppinglist){
+            Intent intent2 = new Intent(AdvancedSearchActivity.this, CreateCategoryActivity.class);
+            finish();
+            startActivity(intent2);
         }
         drawerLayout.closeDrawer(GravityCompat.START);
         return true;
Index: app/src/main/java/sg/edu/np/mad/pocketchef/CreateCategoryActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/CreateCategoryActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/CreateCategoryActivity.java
new file mode 100644
--- /dev/null	(date 1716830922377)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/CreateCategoryActivity.java	(date 1716830922377)
@@ -0,0 +1,379 @@
+package sg.edu.np.mad.pocketchef;
+
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.net.Uri;
+import android.os.Bundle;
+import android.provider.MediaStore;
+import android.util.Log;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.ImageView;
+
+import androidx.activity.EdgeToEdge;
+import androidx.activity.result.ActivityResultLauncher;
+import androidx.activity.result.PickVisualMediaRequest;
+import androidx.activity.result.contract.ActivityResultContracts;
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.ActionBarDrawerToggle;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.graphics.Insets;
+import androidx.core.view.GravityCompat;
+import androidx.core.view.ViewCompat;
+import androidx.core.view.WindowInsetsCompat;
+import androidx.drawerlayout.widget.DrawerLayout;
+import androidx.recyclerview.widget.GridLayoutManager;
+
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.google.android.material.appbar.MaterialToolbar;
+import com.google.android.material.navigation.NavigationView;
+import com.google.android.material.textfield.TextInputEditText;
+import com.kongzue.albumdialog.PhotoAlbumDialog;
+import com.kongzue.albumdialog.util.DialogImplCallback;
+import com.kongzue.albumdialog.util.SelectPhotoCallback;
+import com.kongzue.dialogx.dialogs.BottomDialog;
+import com.kongzue.dialogx.dialogs.BottomMenu;
+import com.kongzue.dialogx.dialogs.FullScreenDialog;
+import com.kongzue.dialogx.dialogs.InputDialog;
+import com.kongzue.dialogx.dialogs.PopTip;
+import com.kongzue.dialogx.dialogs.WaitDialog;
+import com.kongzue.dialogx.interfaces.OnDialogButtonClickListener;
+import com.kongzue.dialogx.interfaces.OnInputDialogButtonClickListener;
+import com.kongzue.dialogx.interfaces.OnMenuItemClickListener;
+
+import org.checkerframework.checker.units.qual.C;
+
+import java.io.IOException;
+import java.lang.ref.WeakReference;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.zip.Inflater;
+
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
+
+import sg.edu.np.mad.pocketchef.base.AppDatabase;
+import sg.edu.np.mad.pocketchef.base.CommonAdapter;
+import sg.edu.np.mad.pocketchef.databinding.ActivityCreateCategoryBinding;
+import sg.edu.np.mad.pocketchef.databinding.ItemCreatecategoryBinding;
+
+public class CreateCategoryActivity extends AppCompatActivity  implements NavigationView.OnNavigationItemSelectedListener  {
+
+    private ActivityCreateCategoryBinding binding;
+    MenuItem nav_home, nav_recipes, nav_search;
+    private CommonAdapter<ItemCreatecategoryBinding, CategoryBean> commonAdapter;
+    DrawerLayout drawerLayout;
+    private List<CategoryBean> datalist;
+    MaterialToolbar toolbar;
+    NavigationView navigationView;
+
+    private ActivityResultLauncher<PickVisualMediaRequest> pickMedia;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        EdgeToEdge.enable(this);
+        binding = ActivityCreateCategoryBinding.inflate(getLayoutInflater());
+        setContentView(binding.getRoot());
+        toolbar = findViewById(R.id.toolbar);
+        drawerLayout = findViewById(R.id.drawer_layout);
+        navigationView = findViewById(R.id.nav_view);
+        nav_home = navigationView.getMenu().findItem(R.id.nav_home);
+        navigationView.bringToFront();
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(CreateCategoryActivity.this,
+                drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+        drawerLayout.addDrawerListener(toggle);
+        toggle.syncState();
+        navigationView.setNavigationItemSelectedListener(CreateCategoryActivity.this);
+        navigationView.setCheckedItem(nav_home);
+        init();
+        path="";
+        binding.bt.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String ed = editText.getText().toString();
+                if(ed.isEmpty()){
+                    PopTip.show("Please enter the name of the new type");
+                    return;
+                }
+                if(path.isEmpty()){
+                    path = "default";
+                }
+                CategoryBean categoryBean =new CategoryBean(path,ed);
+                new Thread(new Runnable() {
+                    @Override
+                    public void run() {
+                        try {
+                            AppDatabase.getInstance(CreateCategoryActivity.this)
+                                    .categoryDao().insertCategory(categoryBean);
+                        }catch (Exception e){
+                            PopTip.show("Addition failed");
+                            return;
+                        }
+                        runOnUiThread(new Runnable() {
+                            @Override
+                            public void run() {
+                                PopTip.show("Success");
+                                datalist.remove(datalist.size()-1);
+                                datalist.add(categoryBean);
+                                datalist.add(new CategoryBean("a","a"));
+                                commonAdapter.setData(datalist);
+                                editText.setText("");
+                                path="";
+                            }
+                        });
+
+                    }
+                }).start();
+            }
+        });
+        register();
+    }
+    ActivityResultLauncher<PickVisualMediaRequest>    pickMedia2;
+    private CategoryBean categoryBean;
+    private void register(){
+        pickMedia2 =
+                registerForActivityResult(new ActivityResultContracts.PickVisualMedia(), uri -> {
+                    if (uri != null) {
+                        path = uri.toString();
+                        Glide.with(CreateCategoryActivity.this)
+                                .load(uri).into(iv);
+                        commonAdapter.notifyDataSetChanged();
+                    } else {
+
+                    }
+                });
+        pickMedia =
+                registerForActivityResult(new ActivityResultContracts.PickVisualMedia(), uri -> {
+                    if (uri != null) {
+                        categoryBean.imagePath = uri.toString();
+                        new Thread(new Runnable() {
+                            @Override
+                            public void run() {
+                                AppDatabase.getInstance(CreateCategoryActivity.this)
+                                        .categoryDao().updateCategory(categoryBean);
+                                runOnUiThread(new Runnable() {
+                                    @Override
+                                    public void run() {
+                                        commonAdapter.notifyDataSetChanged();
+                                    }
+                                });
+                            }
+                        }).start();
+                    } else {
+
+                    }
+                });
+    }
+    private TextInputEditText editText;
+    private ImageView iv;
+    private void init(){
+        GridLayoutManager gridLayoutManager = new GridLayoutManager(this, 2);
+        binding.rv.setLayoutManager(gridLayoutManager);
+        binding.rv.setItemViewCacheSize(100);
+        commonAdapter = new CommonAdapter<ItemCreatecategoryBinding, CategoryBean>(new ArrayList<>()) {
+            @Override
+            protected int getType(int position) {
+                if(datalist==null||datalist.isEmpty()||datalist.size()-1==position){
+                    return -1;
+                }else{
+                    return position;
+                }
+            }
+
+            @Override
+            protected void show(ItemCreatecategoryBinding holder, int position, CategoryBean cetegoryBean) {
+                holder.cl.setVisibility(View.GONE);
+                holder.addLl.setVisibility(View.GONE);
+                if(getItemViewType(position)==-1){
+                    holder.addLl.setVisibility(View.VISIBLE);
+                    holder.cl.setVisibility(View.GONE);
+                    try {
+                        holder.addPicture.setImageResource(R.drawable.baseline_add_24);
+                    }catch (Exception e){
+
+                    }
+
+                    holder.addPicture.setOnClickListener(new View.OnClickListener() {
+                        @Override
+                        public void onClick(View v) {
+                            openPicture(  holder.addPicture);
+                        }
+                    });
+                    editText = holder.edAdd;
+                }else{
+                    holder.addLl.setVisibility(View.GONE);
+                    holder.cl.setVisibility(View.VISIBLE);
+                    if(cetegoryBean.imagePath.equals("Favorite")){
+                        holder.tvStr.setText("Favorite");
+                        holder.ivStr.setImageResource(R.drawable.pocketchef_logo);
+                        holder.cl.setOnClickListener(new View.OnClickListener() {
+                            @Override
+                            public void onClick(View v) {
+                                Intent intent =new Intent(CreateCategoryActivity.this,
+                                        ShowCollectActivity.class);
+                                intent.putExtra("id",cetegoryBean.text);
+                                finish();
+                                startActivity(intent);
+                            }
+                        });
+                    }else if(!cetegoryBean.imagePath.equals("a")){
+                        holder.tvStr.setText(cetegoryBean.text);
+                        if(path.equals("default")){
+                            Glide.with(CreateCategoryActivity.this)
+                                    .load(R.drawable.pocketchef_logo)
+                                    .into(holder.ivStr);
+                        }else{
+                            Glide.with(CreateCategoryActivity.this)
+                                    .load(cetegoryBean.imagePath)
+                                    .into(holder.ivStr);
+                        }
+
+                        holder.cl.setOnLongClickListener(new View.OnLongClickListener() {
+                            @Override
+                            public boolean onLongClick(View v) {
+                                String[] text = new String[]{"edit images", "edit category name"
+                                        ,"delete category"};
+                                BottomMenu.show(text)
+                                        .setMessage("Edit")
+                                        .setOnMenuItemClickListener(new OnMenuItemClickListener<BottomMenu>() {
+                                            @Override
+                                            public boolean onClick(BottomMenu dialog, CharSequence text, int index) {
+                                                if(index == 0){
+                                                    openPicture(cetegoryBean);
+                                                }else if(index==1){
+                                                    setCategoryBeanName(cetegoryBean);
+                                                }else if(index==2){
+                                                    WaitDialog.show("loading...");
+                                                    new Thread(new Runnable() {
+                                                        @Override
+                                                        public void run() {
+                                                            AppDatabase.getInstance(CreateCategoryActivity.this)
+                                                                    .RecipeDetailsCDao().deleteByCategoryBeanId(cetegoryBean.text);
+                                                            AppDatabase.getInstance(CreateCategoryActivity.this
+                                                            ).categoryDao().deleteCategory(cetegoryBean);
+                                                            datalist.remove(cetegoryBean);
+                                                            runOnUiThread(new Runnable() {
+                                                                @Override
+                                                                public void run() {
+                                                                    WaitDialog.dismiss();
+                                                                    commonAdapter.notifyItemRemoved(position);
+                                                                }
+                                                            });
+                                                        }
+                                                    }).start();
+                                                }
+                                                dialog.dismiss();
+                                                return true;
+                                            }
+                                        });
+                                return true;
+                            }
+                        });
+                        holder.cl.setOnClickListener(new View.OnClickListener() {
+                            @Override
+                            public void onClick(View v) {
+                                Intent intent =new Intent(CreateCategoryActivity.this,
+                                        ShowCollectActivity.class);
+                                intent.putExtra("id",cetegoryBean.text);
+                                finish();
+                                startActivity(intent);
+                            }
+                        });
+                    }
+                }
+            }
+        };
+        binding.rv.setAdapter(commonAdapter);
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                datalist= AppDatabase.getInstance(CreateCategoryActivity.this)
+                        .categoryDao().getAllCategories();
+                if(datalist==null||datalist.isEmpty()){
+                    datalist =new ArrayList<>();
+                }
+                CategoryBean categoryBean =new CategoryBean("a","a");
+                datalist.add(categoryBean);
+                runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        commonAdapter.setData(datalist);
+                    }
+                });
+
+            }
+        }).start();
+    }
+
+    private void setCategoryBeanName(CategoryBean categoryBean){
+        new InputDialog("edit", "Please enter a new category name",
+                "ok", "cancel", "")
+                .setCancelable(false)
+                .setOkButton(new OnInputDialogButtonClickListener<InputDialog>() {
+                    @Override
+                    public boolean onClick(InputDialog baseDialog, View v, String inputStr) {
+                        if(inputStr.isEmpty()){
+                            PopTip.show("Input cannot be empty");
+                            return true;
+                        }
+                        categoryBean.text = inputStr;
+                        commonAdapter.notifyDataSetChanged();
+                        new Thread(new Runnable() {
+                            @Override
+                            public void run() {
+                                AppDatabase.getInstance(CreateCategoryActivity.this)
+                                        .categoryDao().updateCategory(categoryBean);
+                            }
+                        }).start();
+                        return false;
+                    }
+                })
+                .show();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+
+    }
+
+    private void openPicture(CategoryBean categoryBean){
+        this.categoryBean = categoryBean;
+
+        pickMedia.launch(new PickVisualMediaRequest.Builder()
+                .setMediaType(ActivityResultContracts.PickVisualMedia.ImageOnly.INSTANCE)
+                .build());
+    }
+
+    private String path="";
+    private void openPicture(ImageView iv){
+        this.iv = iv;
+        pickMedia2.launch(new PickVisualMediaRequest.Builder()
+                .setMediaType(ActivityResultContracts.PickVisualMedia.ImageOnly.INSTANCE)
+                .build());
+    }
+
+    @Override
+    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {
+        int itemId = menuItem.getItemId();
+        if (itemId == R.id.nav_home) {
+            Intent intent = new Intent(CreateCategoryActivity.this, MainActivity.class);
+            finish();
+            startActivity(intent);
+        } else if (itemId == R.id.nav_recipes) {
+            Intent intent2 = new Intent(CreateCategoryActivity.this, RecipeActivity.class);
+            finish();
+            startActivity(intent2);
+        } else if (itemId == R.id.nav_search) {
+            Intent intent2 = new Intent(CreateCategoryActivity.this, AdvancedSearchActivity.class);
+            finish();
+            startActivity(intent2);
+        }else if(itemId == R.id.nav_shoppinglist){
+
+        }
+        drawerLayout.closeDrawer(GravityCompat.START);
+        return true;
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/blue_dashed_line.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/blue_dashed_line.xml b/app/src/main/res/drawable/blue_dashed_line.xml
new file mode 100644
--- /dev/null	(date 1711645096000)
+++ b/app/src/main/res/drawable/blue_dashed_line.xml	(date 1711645096000)
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <solid android:color="@android:color/transparent" />
+    <stroke
+        android:width="2dp"
+        android:color="#0000FF"
+        android:dashWidth="10dp"
+        android:dashGap="5dp" />
+</shape>
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/pocketchef/InstructionsManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport android.os.Handler;\r\n\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Listener.InstructionsListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.RecipeDetailsListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.SimilarRecipesListener;\r\nimport sg.edu.np.mad.pocketchef.Models.InstructionsResponse;\r\n\r\npublic class InstructionsManager {\r\n    private final Handler handler = new Handler();\r\n    private final int DELAY_BETWEEN_CALLS = 200; // Delay in milliseconds (200ms = 5 requests per second)\r\n\r\n    public void processInstructions(List<InstructionsResponse> instructionsList, InstructionsListener listener) {\r\n        // Execute the instructions with a delay\r\n        handler.postDelayed(() -> listener.didFetch(instructionsList, \"Success\"), DELAY_BETWEEN_CALLS);\r\n    }\r\n\r\n    public void fetchRecipeDetailsWithDelay(RequestManager manager, RecipeDetailsListener listener, int id, long delay) {\r\n        handler.postDelayed(() -> manager.getRecipeDetails(listener, id), delay);\r\n    }\r\n\r\n    public void fetchSimilarRecipesWithDelay(RequestManager manager, SimilarRecipesListener listener, int id, long delay) {\r\n        handler.postDelayed(() -> manager.getSimilarRecipes(listener, id), delay);\r\n    }\r\n\r\n    public void fetchInstructionsWithDelay(RequestManager manager, InstructionsListener listener, int id, long delay) {\r\n        handler.postDelayed(() -> manager.getInstructions(listener, id), delay);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/InstructionsManager.java b/app/src/main/java/sg/edu/np/mad/pocketchef/InstructionsManager.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/InstructionsManager.java	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/InstructionsManager.java	(date 1716729054000)
@@ -29,4 +29,7 @@
     public void fetchInstructionsWithDelay(RequestManager manager, InstructionsListener listener, int id, long delay) {
         handler.postDelayed(() -> manager.getInstructions(listener, id), delay);
     }
+    public void QuerDataBase(RequestManager manager, InstructionsListener listener, int id, long delay){
+        handler.postDelayed(() -> manager.getInstructions(listener, id), delay);
+    }
 }
Index: app/src/main/res/drawable/baseline_add_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_add_24.xml b/app/src/main/res/drawable/baseline_add_24.xml
new file mode 100644
--- /dev/null	(date 1711765524000)
+++ b/app/src/main/res/drawable/baseline_add_24.xml	(date 1711765524000)
@@ -0,0 +1,5 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:tint="#1796EA" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">
+      
+    <path android:fillColor="@android:color/white" android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
+    
+</vector>
Index: app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Models.Database;\r\n\r\npublic class AddToFavoritesDialog extends Dialog {\r\n    private Context context;\r\n    private int recipeId;\r\n    private Spinner categorySpinner;\r\n    private EditText editTextNewCategory;\r\n    private Button buttonSave, buttonCancel;\r\n\r\n    public AddToFavoritesDialog(@NonNull Context context, int recipeId) {\r\n        super(context);\r\n        this.context = context;\r\n        this.recipeId = recipeId;\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.dialog_add_to_favorites);\r\n\r\n        categorySpinner = findViewById(R.id.spinner_categories);\r\n        editTextNewCategory = findViewById(R.id.edit_new_category);\r\n        buttonSave = findViewById(R.id.button_save);\r\n        buttonCancel = findViewById(R.id.button_cancel);\r\n\r\n        loadCategories();\r\n\r\n        buttonSave.setOnClickListener(v -> saveToFavorites());\r\n        buttonCancel.setOnClickListener(v -> dismiss());\r\n    }\r\n\r\n    private void loadCategories() {\r\n        // Fetch categories from the database or data source\r\n        List<String> categories = Database.getInstance().getFavoriteCategories();\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(context, android.R.layout.simple_spinner_item, categories);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        categorySpinner.setAdapter(adapter);\r\n    }\r\n\r\n    private void saveToFavorites() {\r\n        String selectedCategory = categorySpinner.getSelectedItem().toString();\r\n        String newCategory = editTextNewCategory.getText().toString().trim();\r\n\r\n        if (!newCategory.isEmpty()) {\r\n            // Add new category to database\r\n            Database.getInstance().addFavoriteCategory(newCategory);\r\n            selectedCategory = newCategory;\r\n        }\r\n\r\n        // Save recipe to the selected category\r\n        Database.getInstance().addRecipeToCategory(recipeId, selectedCategory);\r\n        Toast.makeText(context, \"Recipe added to favorites\", Toast.LENGTH_SHORT).show();\r\n        dismiss();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java b/app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java	(date 1716630138000)
@@ -34,7 +34,7 @@
         setContentView(R.layout.dialog_add_to_favorites);
 
         categorySpinner = findViewById(R.id.spinner_categories);
-        editTextNewCategory = findViewById(R.id.edit_new_category);
+
         buttonSave = findViewById(R.id.button_save);
         buttonCancel = findViewById(R.id.button_cancel);
 
Index: app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Models.Ingredient;\r\nimport sg.edu.np.mad.pocketchef.R;\r\n\r\npublic class InstructionsIngredientsAdapter extends RecyclerView.Adapter<InstructionIngredientsViewHolder> {\r\n    final Context context;\r\n    final List<Ingredient> list;\r\n\r\n    public InstructionsIngredientsAdapter(Context context, List<Ingredient> list) {\r\n        this.context = context;\r\n        this.list = list;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public InstructionIngredientsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        return new InstructionIngredientsViewHolder(LayoutInflater.from(context).inflate(R.layout.list_instructions_step_items, parent, false));\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull InstructionIngredientsViewHolder holder, int position) {\r\n        if (list.isEmpty()) {\r\n            holder.textView_instructions_step_item.setText(\"No Ingredients\");\r\n            // Optionally hide the imageView_instructions_step_items if needed\r\n            holder.imageView_instructions_step_items.setVisibility(View.GONE);\r\n        } else {\r\n            holder.textView_instructions_step_item.setText(list.get(position).name);\r\n            holder.textView_instructions_step_item.setSelected(true);\r\n            Picasso.get().load(list.get(position).image)\r\n                    .fit()\r\n                    .centerCrop()\r\n                    .into(holder.imageView_instructions_step_items);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return Math.max(1, list.size());\r\n    }\r\n}\r\n\r\nclass InstructionIngredientsViewHolder extends RecyclerView.ViewHolder {\r\n    final ImageView imageView_instructions_step_items;\r\n    final TextView textView_instructions_step_item;\r\n    public InstructionIngredientsViewHolder(@NonNull View itemView) {\r\n        super(itemView);\r\n        imageView_instructions_step_items = itemView.findViewById(R.id.imageView_instructions_step_items);\r\n        textView_instructions_step_item = itemView.findViewById(R.id.textView_instructions_step_item);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java b/app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java	(date 1716826728246)
@@ -41,10 +41,14 @@
         } else {
             holder.textView_instructions_step_item.setText(list.get(position).name);
             holder.textView_instructions_step_item.setSelected(true);
-            Picasso.get().load(list.get(position).image)
-                    .fit()
-                    .centerCrop()
-                    .into(holder.imageView_instructions_step_items);
+            try {
+                Picasso.get().load(list.get(position).image)
+                        .fit()
+                        .centerCrop()
+                        .into(holder.imageView_instructions_step_items);
+            }catch (Exception e){
+
+            }
         }
     }
 
Index: app/src/main/res/layout/item_createcategory.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_createcategory.xml b/app/src/main/res/layout/item_createcategory.xml
new file mode 100644
--- /dev/null	(date 1716636914000)
+++ b/app/src/main/res/layout/item_createcategory.xml	(date 1716636914000)
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/cl"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        >
+
+    <ImageView
+        android:id="@+id/iv_str"
+        android:layout_width="160dp"
+        android:layout_height="160dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        android:layout_margin="10dp"
+        />
+
+    <TextView
+        android:id="@+id/tv_str"
+        android:layout_width="160dp"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/iv_str"
+        android:layout_margin="10dp"
+        android:gravity="center"
+        />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+    <LinearLayout
+        android:id="@+id/add_ll"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:visibility="gone"
+        android:gravity="center_vertical"
+        android:orientation="vertical">
+        <ImageView
+            android:gravity="center"
+            android:id="@+id/add_picture"
+            android:layout_width="160dp"
+            android:layout_height="160dp"
+            android:background="@drawable/blue_dashed_line"
+            android:layout_margin="10dp"
+            android:src="@drawable/baseline_add_24"
+            />
+        <com.google.android.material.textfield.TextInputLayout
+            android:id="@+id/ed"
+            android:layout_width="180dp"
+            android:layout_height="wrap_content"
+            android:hint="Category Name"
+            android:padding="10dp"
+            >
+
+            <com.google.android.material.textfield.TextInputEditText
+                android:id="@+id/ed_add"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:inputType="text" />
+        </com.google.android.material.textfield.TextInputLayout>
+    </LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/pocketchef/base/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/base/App.java b/app/src/main/java/sg/edu/np/mad/pocketchef/base/App.java
new file mode 100644
--- /dev/null	(date 1716636416000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/base/App.java	(date 1716636416000)
@@ -0,0 +1,14 @@
+package sg.edu.np.mad.pocketchef.base;
+
+import android.app.Application;
+
+import com.kongzue.dialogx.DialogX;
+
+public class App extends Application {
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        DialogX.init(this);
+    }
+}
Index: app/src/main/java/sg/edu/np/mad/pocketchef/base/CommonAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/base/CommonAdapter.java b/app/src/main/java/sg/edu/np/mad/pocketchef/base/CommonAdapter.java
new file mode 100644
--- /dev/null	(date 1716632292000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/base/CommonAdapter.java	(date 1716632292000)
@@ -0,0 +1,69 @@
+package sg.edu.np.mad.pocketchef.base;
+
+import android.view.LayoutInflater;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.viewbinding.ViewBinding;
+
+import java.lang.reflect.Method;
+import java.lang.reflect.ParameterizedType;
+import java.util.List;
+
+public abstract class CommonAdapter<V extends ViewBinding,T> extends RecyclerView.Adapter<ViewHolder<V>> {
+
+    private List<T> data;
+    protected abstract int getType(int position);
+    @Override
+    public int getItemViewType(int position) {
+        return getType(position);
+    }
+
+    public CommonAdapter(List<T> data) {
+        this.data = data;
+    }
+    @NonNull
+    @Override
+    public ViewHolder<V> onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        return new ViewHolder(getViewBinding(parent));
+    }
+
+    private V getViewBinding(ViewGroup parent) {
+        V bind = null;
+        ParameterizedType type = (ParameterizedType) getClass().getGenericSuperclass();
+        Class<V> clazz = (Class<V>) type.getActualTypeArguments()[0];
+        try {
+            Method inflate = clazz.getDeclaredMethod("inflate", LayoutInflater.class, ViewGroup.class, boolean.class);
+            bind = (V) inflate.invoke(null, LayoutInflater.from(parent.getContext()), parent, false);
+        } catch (Exception e) {
+           e.printStackTrace();
+        }
+        return bind;
+    }
+
+
+    @Override
+    public void onBindViewHolder(@NonNull ViewHolder<V> holder, int position) {
+        show(holder.bind, position, data.get(position));
+    }
+
+    protected abstract void show(V holder, int position, T t);
+
+
+    public void setData(List<T> data) {
+        this.data = data;
+        notifyDataSetChanged();
+    }
+
+    @Override
+    public int getItemCount() {
+        return data.size();
+    }
+
+    public CommonAdapter setText(TextView textView, String data){
+        textView.setText(data);
+        return this;
+    }
+}
Index: app/src/main/java/sg/edu/np/mad/pocketchef/Models/CategoryBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/Models/CategoryBean.java b/app/src/main/java/sg/edu/np/mad/pocketchef/Models/CategoryBean.java
new file mode 100644
--- /dev/null	(date 1716733096000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/Models/CategoryBean.java	(date 1716733096000)
@@ -0,0 +1,21 @@
+package sg.edu.np.mad.pocketchef.Models;
+
+import androidx.room.Entity;
+import androidx.room.PrimaryKey;
+
+import org.checkerframework.common.aliasing.qual.Unique;
+
+@Entity
+public class CategoryBean {
+    @PrimaryKey(autoGenerate = true)
+    public int id; // 通常，我们会为每个实体添加一个主键
+
+    public CategoryBean(String imagePath, String text) {
+        this.imagePath = imagePath;
+        this.text = text;
+    }
+
+    public String imagePath;
+    @Unique
+    public String text;
+}
Index: app/src/main/java/sg/edu/np/mad/pocketchef/SearchedRecipesOutput.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport static androidx.constraintlayout.helper.widget.MotionEffect.TAG;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.Button;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.appbar.MaterialToolbar;\r\nimport com.google.android.material.navigation.NavigationView;\r\n\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Adapters.SearchedRecipesAdapter;\r\nimport sg.edu.np.mad.pocketchef.Listener.RecipeClickListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.SearchRecipeListener;\r\nimport sg.edu.np.mad.pocketchef.Models.SearchedRecipe;\r\nimport sg.edu.np.mad.pocketchef.Models.SearchedRecipeApiResponse;\r\n\r\npublic class SearchedRecipesOutput extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener{\r\n    //Defining necessary variables\r\n    private static final String EXTRA_RECIPE_ID = \"id\";\r\n    private ProgressBar progressBar;\r\n    private RequestManager requestManager;\r\n    private RecyclerView recyclerSearchedRecpies;\r\n\r\n    //For navigation menu\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    MaterialToolbar toolbar;\r\n    MenuItem nav_home, nav_recipes, nav_search;\r\n\r\n    //For search inputs\r\n    private String query;\r\n    private String excludeIngredients;\r\n    private Integer minCarbs;\r\n    private Integer maxCarbs;\r\n    private Integer minProtein;\r\n    private Integer maxProtein;\r\n    private Integer minCalories;\r\n    private Integer maxCalories;\r\n    private String diet;\r\n    private String intolerances;\r\n    private String sort;\r\n    private String sortDirection;\r\n    private Button expandSearchButton;\r\n    private TextView noRecipeFound;\r\n    private Spinner sortBySpinner;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_searched_recipes_output);\r\n\r\n        //Getting user inputs from the Advanced Search Activity\r\n        Intent receivingEnd = getIntent();\r\n        query = receivingEnd.getStringExtra(\"query\");\r\n        excludeIngredients = receivingEnd.getStringExtra(\"excludeIngredients\");\r\n        minCarbs = receivingEnd.getIntExtra(\"minCarbs\", 0);\r\n        maxCarbs = receivingEnd.getIntExtra(\"maxCarbs\", 1444444444);\r\n        minProtein = receivingEnd.getIntExtra(\"minProtein\", 0);\r\n        maxProtein = receivingEnd.getIntExtra(\"maxProtein\", 1444444444);\r\n        minCalories = receivingEnd.getIntExtra(\"minCalories\", 0);\r\n        maxCalories = receivingEnd.getIntExtra(\"maxCalories\", 1444444444);\r\n        diet = receivingEnd.getStringExtra(\"diet\");\r\n        intolerances = receivingEnd.getStringExtra(\"intolerances\");\r\n        sort = null; //Setting default to null\r\n        sortDirection = \"asc\"; //Setting default to ascending\r\n\r\n        requestManager = new RequestManager(this);\r\n\r\n        //Setting up views, listeners and fetching recipes\r\n        setupViews();\r\n        setupListeners();\r\n        fetchSearchedRecipes();\r\n    }\r\n\r\n    private void setupViews() {\r\n        // Getting all the variables from xml file\r\n        recyclerSearchedRecpies = findViewById(R.id.recycler_searched_recipes);\r\n        expandSearchButton = findViewById(R.id.expand_search_button);\r\n        progressBar = findViewById(R.id.progressBar);\r\n        noRecipeFound = findViewById(R.id.no_recipe_found);\r\n        sortBySpinner = findViewById(R.id.sort_by_spinner);\r\n        // Navigation Menu set up\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        nav_home = navigationView.getMenu().findItem(R.id.nav_home);\r\n        nav_recipes = navigationView.getMenu().findItem(R.id.nav_recipes);\r\n        nav_search = navigationView.getMenu().findItem(R.id.nav_search);\r\n        // Set up nav menu\r\n        navigationView.bringToFront();\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(SearchedRecipesOutput.this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        navigationView.setNavigationItemSelectedListener(SearchedRecipesOutput.this);\r\n        navigationView.setCheckedItem(nav_home);\r\n    }\r\n\r\n    // Setting up listeners\r\n    public void setupListeners(){\r\n        //Check if expandSearchButton has been clicked\r\n        expandSearchButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) { //Go back to AdvancedSearchActivity\r\n                Intent SearchedRecipeintent = new Intent(SearchedRecipesOutput.this, AdvancedSearchActivity.class);\r\n                startActivity(SearchedRecipeintent);\r\n            }\r\n        });\r\n\r\n        //Check if user chose to sort recipes\r\n        sortBySpinner.setOnItemSelectedListener(new AdapterView.OnItemSelectedListener() {\r\n            @Override\r\n            public void onItemSelected(AdapterView<?> parent, View view, int position, long id) {\r\n                sort = sortBySpinner.getSelectedItem().toString();\r\n\r\n                //Check how user wants to sort recipes\r\n                if (sort == \"Sort by\") {\r\n                    sort = null;\r\n                } else {\r\n                    switch (sort) { // Replace sort and sort direction values with user's chosen option\r\n                        case \"Carbs (Asc)\":\r\n                            sort = \"carbs\";\r\n                            sortDirection = \"asc\";\r\n                            break;\r\n                        case \"Carbs (Desc)\":\r\n                            sort = \"carbs\";\r\n                            sortDirection = \"desc\";\r\n                            break;\r\n                        case \"Protein (Asc)\":\r\n                            sort = \"protein\";\r\n                            sortDirection = \"asc\";\r\n                            break;\r\n                        case \"Protein (Desc)\":\r\n                            sort = \"protein\";\r\n                            sortDirection = \"desc\";\r\n                            break;\r\n                        case \"Calories (Asc)\":\r\n                            sort = \"calories\";\r\n                            sortDirection = \"asc\";\r\n                            break;\r\n                        case \"Calories (Desc)\":\r\n                            sort = \"calories\";\r\n                            sortDirection = \"desc\";\r\n                            break;\r\n                        default:\r\n                            sort = null;\r\n                            sortDirection = null;\r\n                            break;\r\n                    }\r\n                }\r\n                fetchSearchedRecipes(); //Fetch recipes again according to new sorting\r\n            }\r\n            @Override\r\n            public void onNothingSelected(AdapterView<?> parent) {\r\n            }\r\n        });\r\n    }\r\n\r\n    //Reading User Inputs and searching for the recipe\r\n    public void fetchSearchedRecipes() {\r\n        progressBar.setVisibility(View.VISIBLE); // Making the progress bar visible as the recipes get searched\r\n        requestManager.getSearchedRecipes(new SearchRecipeListener() { //API Response\r\n            @Override\r\n            public void didFetch(SearchedRecipeApiResponse response, String message) {\r\n                // Log the API response\r\n                if (response != null) {\r\n                    Log.d(\"SearchActivity\", \"API Response: \" + response.toString());\r\n                    // Process the response and update UI accordingly\r\n                    setupSearchedRecipeRecyclerView(response);\r\n                } else {\r\n                    // Handle null response\r\n                    Log.d(\"SearchActivity\", \"Response is null\");\r\n                    Toast.makeText(SearchedRecipesOutput.this, \"Failed to fetch recipes\", Toast.LENGTH_SHORT).show();\r\n                }\r\n            }\r\n            @Override\r\n            public void didError(String message) {\r\n                // Handle API errors\r\n                Log.d(\"SearchActivity\", \"API Error: \" + message);\r\n                Toast.makeText(SearchedRecipesOutput.this, \"Failed to fetch recipes: \" + message, Toast.LENGTH_SHORT).show();\r\n            }\r\n        }, query, excludeIngredients, minCarbs, maxCarbs, minProtein, maxProtein, minCalories, maxCalories, diet, intolerances, sort, sortDirection);\r\n    }\r\n\r\n    //Setting up recycler view to show searched recipes\r\n    private void setupSearchedRecipeRecyclerView(SearchedRecipeApiResponse response) {\r\n        recyclerSearchedRecpies.setHasFixedSize(true);\r\n\r\n        // Check if response object is not null and if it contains recipes\r\n        if (response != null && response.getRecipes() != null) {\r\n\r\n            // Set the layout manager\r\n            recyclerSearchedRecpies.setLayoutManager(new LinearLayoutManager(SearchedRecipesOutput.this));\r\n\r\n            // Initialize adapter\r\n            SearchedRecipesAdapter searchedRecipesAdapter = new SearchedRecipesAdapter(SearchedRecipesOutput.this, response.getRecipes(), recipeClickListener);\r\n\r\n            // Check if there are no recipes found\r\n            if (searchedRecipesAdapter.getItemCount() == 0){\r\n                sortBySpinner.setVisibility(View.GONE); //Hide the sort by drop down\r\n                noRecipeFound.setVisibility(View.VISIBLE); //Show the No Recipes Found Text\r\n            }\r\n\r\n            // Attach adapter\r\n            recyclerSearchedRecpies.setAdapter(searchedRecipesAdapter);\r\n\r\n            // Making the progress bar disappear after recipes get searched\r\n            progressBar.setVisibility(View.GONE);\r\n\r\n        } else {\r\n            Log.d(TAG, \"Response or recipes are null\"); //For debugging\r\n        }\r\n    }\r\n\r\n    //To see recipe details\r\n    private final RecipeClickListener recipeClickListener = id -> startActivity(new Intent(SearchedRecipesOutput.this, RecipeDetailsActivity.class)\r\n            .putExtra(\"id\", id));\r\n\r\n    //For menu\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        int itemId = menuItem.getItemId();\r\n        if (itemId == R.id.nav_home) {\r\n            Intent intent = new Intent(SearchedRecipesOutput.this, MainActivity.class);\r\n            finish();\r\n            startActivity(intent);\r\n        } else if (itemId == R.id.nav_recipes) {\r\n            // Nothing happens\r\n        } else if (itemId == R.id.nav_search) {\r\n            Intent intent2 = new Intent(SearchedRecipesOutput.this, AdvancedSearchActivity.class);\r\n            finish();\r\n            startActivity(intent2);\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/SearchedRecipesOutput.java b/app/src/main/java/sg/edu/np/mad/pocketchef/SearchedRecipesOutput.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/SearchedRecipesOutput.java	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/SearchedRecipesOutput.java	(date 1716743792000)
@@ -250,11 +250,17 @@
             finish();
             startActivity(intent);
         } else if (itemId == R.id.nav_recipes) {
-            // Nothing happens
+            Intent intent2 = new Intent(SearchedRecipesOutput.this, RecipeActivity.class);
+            finish();
+            startActivity(intent2);
         } else if (itemId == R.id.nav_search) {
             Intent intent2 = new Intent(SearchedRecipesOutput.this, AdvancedSearchActivity.class);
             finish();
             startActivity(intent2);
+        }else if(itemId == R.id.nav_shoppinglist){
+            Intent intent2 = new Intent(SearchedRecipesOutput.this, CreateCategoryActivity.class);
+            finish();
+            startActivity(intent2);
         }
         drawerLayout.closeDrawer(GravityCompat.START);
         return true;
Index: app/src/main/res/layout/activity_create_category.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_create_category.xml b/app/src/main/res/layout/activity_create_category.xml
new file mode 100644
--- /dev/null	(date 1716743662000)
+++ b/app/src/main/res/layout/activity_create_category.xml	(date 1716743662000)
@@ -0,0 +1,64 @@
+<androidx.drawerlayout.widget.DrawerLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/drawer_layout"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    tools:context=".MainActivity">
+
+    <com.google.android.material.navigation.NavigationView
+        android:id="@+id/nav_view"
+        android:layout_width="wrap_content"
+        android:layout_height="match_parent"
+        android:layout_gravity="start"
+        app:headerLayout="@layout/header"
+        app:menu="@menu/main_menu" />
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@color/paletteorange"
+        android:id="@+id/recipe_details"
+        android:clickable="true"
+        android:focusable="true">
+
+        <com.google.android.material.appbar.MaterialToolbar
+            android:id="@+id/toolbar"
+            android:layout_width="0dp"
+            android:layout_height="wrap_content"
+            android:background="@color/paletteblue"
+            android:minHeight="?attr/actionBarSize"
+            app:contentInsetStart="0dp"
+            app:contentInsetStartWithNavigation="0dp"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            app:navigationIcon="@drawable/ic_launcher_foreground"
+            app:title="" />
+
+
+
+        <androidx.recyclerview.widget.RecyclerView
+            android:id="@+id/rv"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintTop_toTopOf="parent"
+            android:layout_marginTop="80dp"
+            app:layout_constraintBottom_toTopOf="@id/bt" />
+
+        <Button
+            android:id="@+id/bt"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:text="add new Category"
+            app:layout_constraintStart_toStartOf="parent"
+            app:layout_constraintEnd_toEndOf="parent"
+            app:layout_constraintBottom_toBottomOf="parent"
+            android:layout_marginBottom="50dp" />
+
+    </androidx.constraintlayout.widget.ConstraintLayout>
+
+</androidx.drawerlayout.widget.DrawerLayout>
Index: app/src/main/java/sg/edu/np/mad/pocketchef/base/AppDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/base/AppDatabase.java b/app/src/main/java/sg/edu/np/mad/pocketchef/base/AppDatabase.java
new file mode 100644
--- /dev/null	(date 1716733284000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/base/AppDatabase.java	(date 1716733284000)
@@ -0,0 +1,33 @@
+package sg.edu.np.mad.pocketchef.base;
+
+import android.content.Context;
+
+import androidx.room.Database;
+import androidx.room.Room;
+import androidx.room.RoomDatabase;
+
+import sg.edu.np.mad.pocketchef.Dao.CategoryDao;
+import sg.edu.np.mad.pocketchef.Dao.RecipeDetailsCDao;
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
+import sg.edu.np.mad.pocketchef.Models.RecipeDetailsC;
+
+@Database(entities = {CategoryBean.class, RecipeDetailsC.class}, version = 1)
+public abstract class AppDatabase extends RoomDatabase {
+    public abstract CategoryDao categoryDao();
+    public abstract RecipeDetailsCDao RecipeDetailsCDao();
+    private static volatile AppDatabase instance;
+    public static AppDatabase getInstance(Context context) {
+        if (instance == null) {
+            synchronized (AppDatabase.class) {
+                if (instance == null) {
+                    instance = Room.databaseBuilder(
+                            context.getApplicationContext(),
+                            AppDatabase.class,
+                            "app.db"
+                    ).build();
+                }
+            }
+        }
+        return instance;
+    }
+}
Index: app/src/main/java/sg/edu/np/mad/pocketchef/base/ViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/base/ViewHolder.java b/app/src/main/java/sg/edu/np/mad/pocketchef/base/ViewHolder.java
new file mode 100644
--- /dev/null	(date 1716631084000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/base/ViewHolder.java	(date 1716631084000)
@@ -0,0 +1,12 @@
+package sg.edu.np.mad.pocketchef.base;
+
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.viewbinding.ViewBinding;
+
+public class ViewHolder<V extends ViewBinding> extends RecyclerView.ViewHolder {
+    protected V bind;
+    public ViewHolder(V bind) {
+        super(bind.getRoot());
+        this.bind = bind;
+    }
+}
Index: app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.appbar.MaterialToolbar;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.text.MessageFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Adapters.IngredientsAdapater;\r\nimport sg.edu.np.mad.pocketchef.Adapters.InstructionsAdapter;\r\nimport sg.edu.np.mad.pocketchef.Adapters.SimilarRecipeAdapter;\r\nimport sg.edu.np.mad.pocketchef.Listener.InstructionsListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.RecipeClickListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.RecipeDetailsListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.SimilarRecipesListener;\r\nimport sg.edu.np.mad.pocketchef.Models.InstructionsResponse;\r\nimport sg.edu.np.mad.pocketchef.Models.RecipeDetailsResponse;\r\nimport sg.edu.np.mad.pocketchef.Models.SimilarRecipeResponse;\r\nimport sg.edu.np.mad.pocketchef.Models.SummaryParser;\r\n\r\npublic class RecipeDetailsActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    // Global variables for activity\r\n    private static final long API_REQUEST_DELAY = 1000;\r\n    int recipeId;\r\n    TextView textView_meal_name, textView_meal_source, textView_meal_servings, textView_meal_ready, textView_meal_price,\r\n            textView_protein_value, textView_fat_value, textView_calories_value, textView_daily_requirements_coverage_value;\r\n    ImageView imageView_meal_image, imageView_nutrition;\r\n    RecyclerView recycler_meal_ingredients, recycler_meal_similar, recycler_meal_instructions;\r\n    RequestManager manager;\r\n    ProgressBar progressBar;\r\n    IngredientsAdapater ingredientsAdapater;\r\n    SimilarRecipeAdapter similarRecipeAdapter;\r\n    InstructionsAdapter instructionsAdapter;\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    MaterialToolbar toolbar;\r\n    MenuItem nav_home, nav_recipes, nav_search;\r\n    ConstraintLayout recipeDetailsLayout, nutritionLabelLayout;\r\n    MaterialButton buttonNutritionLabel;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_recipe_details);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        findViews();\r\n        recipeId = Integer.parseInt(getIntent().getStringExtra(\"id\"));\r\n        // Utilising RequestManager class methods\r\n        loadRecipeDetailsWithStaggeredApiCalls();\r\n        // Set up nav menu\r\n        navigationView.bringToFront();\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(RecipeDetailsActivity.this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        navigationView.setNavigationItemSelectedListener(RecipeDetailsActivity.this);\r\n        navigationView.setCheckedItem(nav_home);\r\n        loadNutritionLabelImage(); // Load the image when the layout becomes visible\r\n        // Set up the OnClickListener for the button\r\n        buttonNutritionLabel.setOnClickListener(v -> {\r\n            if (nutritionLabelLayout.getVisibility() == View.VISIBLE) {\r\n                nutritionLabelLayout.setVisibility(View.GONE);\r\n            } else {\r\n                nutritionLabelLayout.setVisibility(View.VISIBLE);\r\n            }\r\n        });\r\n\r\n        //set the onclicklistener for the favorite button\r\n        btnFavorite.setOnClickListener(v -> showFavoriteDialog());\r\n    }\r\n    // Intialise objects\r\n    private void findViews() {\r\n        // Intialise Progress Bar\r\n        progressBar = findViewById(R.id.progressBar);\r\n        // Intialise Text Views\r\n        textView_meal_name = findViewById(R.id.textView_meal_name);\r\n        textView_meal_source = findViewById(R.id.textView_meal_source);\r\n        // Text Views in Grid Layout\r\n        textView_protein_value = findViewById(R.id.textView_protein_value);\r\n        textView_fat_value = findViewById(R.id.textView_fat_value);\r\n        textView_calories_value = findViewById(R.id.textView_calories_value);\r\n        textView_daily_requirements_coverage_value = findViewById(R.id.textView_daily_requirements_coverage_value);\r\n        // Text Views for below Grid Layout\r\n        textView_meal_servings = findViewById(R.id.textView_meal_servings);\r\n        textView_meal_ready = findViewById(R.id.textView_meal_ready);\r\n        textView_meal_price = findViewById(R.id.textView_meal_price);\r\n        // Intialise Image Views\r\n        imageView_meal_image = findViewById(R.id.imageView_meal_image);\r\n        // Intialise Recycler Views\r\n        recycler_meal_ingredients = findViewById(R.id.recycler_meal_ingredients);\r\n        recycler_meal_similar = findViewById(R.id.recycler_meal_similar);\r\n        recycler_meal_instructions = findViewById(R.id.recycler_meal_instructions);\r\n        // Navigation Menu set up\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        nav_home = navigationView.getMenu().findItem(R.id.nav_home);\r\n        nav_recipes = navigationView.getMenu().findItem(R.id.nav_recipes);\r\n        nav_search = navigationView.getMenu().findItem(R.id.nav_search);\r\n        recipeDetailsLayout = findViewById(R.id.recipe_details);\r\n        nutritionLabelLayout = findViewById(R.id.nutrition_dialog_layout);\r\n        //Intialise Nutritional Image\r\n        imageView_nutrition = findViewById(R.id.imageView_nutrition);\r\n        // Intialise Button\r\n        buttonNutritionLabel = findViewById(R.id.button_Nutrition_Label);\r\n        // intialise favorite button\r\n        btnFavorite = findViewById(R.id.btn_favorite);\r\n    }\r\n    private void loadRecipeDetailsWithStaggeredApiCalls() {\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        manager = new RequestManager(this);\r\n        InstructionsManager instructionsManager = new InstructionsManager();\r\n        instructionsManager.fetchInstructionsWithDelay(manager, instructionsListener, recipeId, 0);\r\n        instructionsManager.fetchRecipeDetailsWithDelay(manager, recipeDetailsListener, recipeId, API_REQUEST_DELAY);\r\n        instructionsManager.fetchSimilarRecipesWithDelay(manager, similarRecipesListener, recipeId, API_REQUEST_DELAY * 2);\r\n    }\r\n    // Implementing the recipeDetailsListener\r\n    private final RecipeDetailsListener recipeDetailsListener = new RecipeDetailsListener() {\r\n        @Override\r\n        public void didFetch(RecipeDetailsResponse response, String message) {\r\n            progressBar.setVisibility(View.GONE);\r\n            // Replace with API response json data\r\n            textView_meal_name.setText(response.title);\r\n            textView_meal_source.setText(response.sourceName);\r\n            textView_meal_servings.setText(MessageFormat.format(\"{0}{1}\", response.servings, getString(R.string.textView_meal_servings_textEnd)));\r\n            textView_meal_ready.setText(MessageFormat.format(\"{0}{1}\", response.readyInMinutes, getString(R.string.textView_meal_ready_textEnd)));\r\n            textView_meal_price.setText(MessageFormat.format(\"{0}{1}\", response.pricePerServing, getString(R.string.textView_meal_price_textEnd)));\r\n            // Parsing recipe details using Summary Parser into Grid Layout\r\n            String summary = SummaryParser.parseRecipeDetails(response.summary);\r\n            String[] details = summary.split(\"\\n\");\r\n            // Null Validation\r\n            textView_protein_value.setText(details[0] != null ? details[0] : \"N/A\");\r\n            textView_fat_value.setText(details[1] != null ? details[1] : \"N/A\");\r\n            textView_calories_value.setText(details[2] != null ? details[2] : \"N/A\");\r\n            textView_daily_requirements_coverage_value.setText(details[3] != null ? details[3] : \"N/A\");\r\n            // Loading image using Picasso\r\n            Picasso.get().load(response.image).into(imageView_meal_image);\r\n            // Use custom layout for recycler view\r\n            recycler_meal_ingredients.setHasFixedSize(true);\r\n            recycler_meal_ingredients.setLayoutManager(new LinearLayoutManager(RecipeDetailsActivity.this, LinearLayoutManager.HORIZONTAL, false));\r\n            // Use adapater\r\n            ingredientsAdapater = new IngredientsAdapater(RecipeDetailsActivity.this, response.extendedIngredients);\r\n            recycler_meal_ingredients.setAdapter(ingredientsAdapater);\r\n\r\n        }\r\n\r\n        @Override\r\n        public void didError(String message) {\r\n            progressBar.setVisibility(View.GONE);\r\n            Toast.makeText(RecipeDetailsActivity.this, message, Toast.LENGTH_SHORT).show();\r\n        }\r\n    };\r\n\r\n    // Implementing the similarRecipesListener\r\n    private final SimilarRecipesListener similarRecipesListener = new SimilarRecipesListener() {\r\n        @Override\r\n        public void didFetch(List<SimilarRecipeResponse> response, String message) {\r\n            recycler_meal_similar.setHasFixedSize(true);\r\n            recycler_meal_similar.setLayoutManager(new LinearLayoutManager(RecipeDetailsActivity.this, LinearLayoutManager.HORIZONTAL, false));\r\n            similarRecipeAdapter = new SimilarRecipeAdapter(RecipeDetailsActivity.this, response, recipeClickListener);\r\n            recycler_meal_similar.setAdapter(similarRecipeAdapter);\r\n        }\r\n\r\n        // This is to check functionality first before implementation\r\n        @Override\r\n        public void didError(String message) {\r\n            Toast.makeText(RecipeDetailsActivity.this, \"message\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    };\r\n\r\n    // This is to check functionality first before implementation\r\n    private final RecipeClickListener recipeClickListener = id -> Toast.makeText(RecipeDetailsActivity.this, \"id\", Toast.LENGTH_SHORT).show();\r\n\r\n    private final InstructionsListener instructionsListener = new InstructionsListener() {\r\n        @Override\r\n        public void didFetch(List<InstructionsResponse> response, String message) {\r\n            recycler_meal_instructions.setHasFixedSize(true);\r\n            recycler_meal_instructions.setLayoutManager(new LinearLayoutManager(RecipeDetailsActivity.this, LinearLayoutManager.VERTICAL, false));\r\n            instructionsAdapter = new InstructionsAdapter(RecipeDetailsActivity.this, response);\r\n            recycler_meal_instructions.setAdapter(instructionsAdapter);\r\n        }\r\n\r\n        @Override\r\n        public void didError(String message) {\r\n        }\r\n    };\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        int itemId = menuItem.getItemId();\r\n        if (itemId == R.id.nav_home) {\r\n            Intent intent = new Intent(RecipeDetailsActivity.this, MainActivity.class);\r\n            finish();\r\n            startActivity(intent);\r\n        } else if (itemId == R.id.nav_recipes) {\r\n            // Nothing happens\r\n        } else if (itemId == R.id.nav_search) {\r\n            Intent intent2 = new Intent(RecipeDetailsActivity.this, AdvancedSearchActivity.class);\r\n            finish();\r\n            startActivity(intent2);\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n    // Loading nutrition image\r\n    private void loadNutritionLabelImage() {\r\n        // Construct the URL for the nutrition label image\r\n        String nutritionLabelUrl = \"https://api.spoonacular.com/recipes/\" + recipeId + \"/nutritionLabel.png?apiKey=\" + getString(R.string.api_key);\r\n        Log.d(\"RecipeDetailsActivity\", \"Nutrition Label URL: \" + nutritionLabelUrl);\r\n        // Load the image using Picasso\r\n        Picasso.get().load(nutritionLabelUrl)\r\n                .into(imageView_nutrition);\r\n    }\r\n\r\n\r\n\r\n\r\n    // Add to favorite list\r\n    MaterialButton btnFavorite;\r\n    List<String> categories;\r\n    private void showFavoriteDialog() {\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_add_to_favorites, null);\r\n        Spinner spinnerCategories = dialogView.findViewById(R.id.spinner_categories);\r\n        EditText editTextNewCategory = dialogView.findViewById(R.id.edit_new_category);\r\n        Button buttonSave = dialogView.findViewById(R.id.button_save);\r\n        Button buttonCancel = dialogView.findViewById(R.id.button_cancel);\r\n\r\n        categories = getCategories();\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, categories);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinnerCategories.setAdapter(adapter);\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setView(dialogView);\r\n        AlertDialog dialog = builder.create();\r\n\r\n        buttonSave.setOnClickListener(v -> {\r\n            String selectedCategory = spinnerCategories.getSelectedItem().toString();\r\n            String newCategory = editTextNewCategory.getText().toString().trim();\r\n\r\n            if (!newCategory.isEmpty()) {\r\n                categories.add(newCategory);\r\n                selectedCategory = newCategory;\r\n            }\r\n            dialog.dismiss();\r\n        });\r\n\r\n        buttonCancel.setOnClickListener(v -> dialog.dismiss());\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    private List<String> getCategories() {\r\n        return new ArrayList<>(Arrays.asList(\"Favorite\"));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java	(revision 3664cdb8e4ff26761b496cc8500ce8b1c4be6174)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java	(date 1716783406000)
@@ -2,6 +2,8 @@
 
 import android.app.AlertDialog;
 import android.content.Intent;
+import android.content.res.ColorStateList;
+import android.graphics.Color;
 import android.os.Bundle;
 import android.util.Log;
 import android.view.MenuItem;
@@ -28,9 +30,14 @@
 import androidx.recyclerview.widget.LinearLayoutManager;
 import androidx.recyclerview.widget.RecyclerView;
 
+import com.bumptech.glide.Glide;
 import com.google.android.material.appbar.MaterialToolbar;
 import com.google.android.material.button.MaterialButton;
 import com.google.android.material.navigation.NavigationView;
+import com.kongzue.dialogx.dialogs.MessageDialog;
+import com.kongzue.dialogx.dialogs.PopTip;
+import com.kongzue.dialogx.dialogs.WaitDialog;
+import com.kongzue.dialogx.interfaces.OnDialogButtonClickListener;
 import com.squareup.picasso.Picasso;
 
 import java.text.MessageFormat;
@@ -45,12 +52,17 @@
 import sg.edu.np.mad.pocketchef.Listener.RecipeClickListener;
 import sg.edu.np.mad.pocketchef.Listener.RecipeDetailsListener;
 import sg.edu.np.mad.pocketchef.Listener.SimilarRecipesListener;
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
 import sg.edu.np.mad.pocketchef.Models.InstructionsResponse;
+import sg.edu.np.mad.pocketchef.Models.RecipeDetailsC;
 import sg.edu.np.mad.pocketchef.Models.RecipeDetailsResponse;
 import sg.edu.np.mad.pocketchef.Models.SimilarRecipeResponse;
 import sg.edu.np.mad.pocketchef.Models.SummaryParser;
+import sg.edu.np.mad.pocketchef.base.App;
+import sg.edu.np.mad.pocketchef.base.AppDatabase;
 
-public class RecipeDetailsActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
+public class RecipeDetailsActivity extends AppCompatActivity
+        implements NavigationView.OnNavigationItemSelectedListener {
 
     // Global variables for activity
     private static final long API_REQUEST_DELAY = 1000;
@@ -71,9 +83,10 @@
     ConstraintLayout recipeDetailsLayout, nutritionLabelLayout;
     MaterialButton buttonNutritionLabel;
 
+    private RecipeDetailsC recipeDetailsC;
+
     @Override
     protected void onCreate(Bundle savedInstanceState) {
-
         super.onCreate(savedInstanceState);
         EdgeToEdge.enable(this);
         setContentView(R.layout.activity_recipe_details);
@@ -89,7 +102,8 @@
         loadRecipeDetailsWithStaggeredApiCalls();
         // Set up nav menu
         navigationView.bringToFront();
-        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(RecipeDetailsActivity.this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(RecipeDetailsActivity.this,
+                drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
         drawerLayout.addDrawerListener(toggle);
         toggle.syncState();
         navigationView.setNavigationItemSelectedListener(RecipeDetailsActivity.this);
@@ -104,8 +118,42 @@
             }
         });
 
-        //set the onclicklistener for the favorite button
-        btnFavorite.setOnClickListener(v -> showFavoriteDialog());
+
+        btnFavorite.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                if(recipeDetailsC==null){
+                    showFavoriteDialog();
+                }else{
+                    MessageDialog.show("Favorite","Whether to cancel the collection","ok"
+                    ,"cancel").setOkButtonClickListener(new OnDialogButtonClickListener<MessageDialog>() {
+                        @Override
+                        public boolean onClick(MessageDialog dialog, View v) {
+                            WaitDialog.show("loading...");
+                            new Thread(new Runnable() {
+                                @Override
+                                public void run() {
+                                    AppDatabase.getInstance(RecipeDetailsActivity.this)
+                                            .RecipeDetailsCDao().delete(recipeDetailsC);
+                                    recipeDetailsC=null;
+                                    runOnUiThread(new Runnable() {
+                                        @Override
+                                        public void run() {
+                                            Glide.with(RecipeDetailsActivity.this).load(R.drawable.ic_btn_star).into(btnFavorite);
+                                            btnFavorite.setImageTintList(ColorStateList.valueOf(Color.WHITE));
+                                            WaitDialog.dismiss();
+                                        }
+                                    });
+                                }
+                            }).start();
+
+                            return false;
+                        }
+                    });
+                }
+
+            }
+        });
     }
     // Intialise objects
     private void findViews() {
@@ -125,7 +173,7 @@
         textView_meal_price = findViewById(R.id.textView_meal_price);
         // Intialise Image Views
         imageView_meal_image = findViewById(R.id.imageView_meal_image);
-        // Intialise Recycler Views
+        // Intialise Recycler Viewsbtn_favorite
         recycler_meal_ingredients = findViewById(R.id.recycler_meal_ingredients);
         recycler_meal_similar = findViewById(R.id.recycler_meal_similar);
         recycler_meal_instructions = findViewById(R.id.recycler_meal_instructions);
@@ -152,6 +200,23 @@
         instructionsManager.fetchInstructionsWithDelay(manager, instructionsListener, recipeId, 0);
         instructionsManager.fetchRecipeDetailsWithDelay(manager, recipeDetailsListener, recipeId, API_REQUEST_DELAY);
         instructionsManager.fetchSimilarRecipesWithDelay(manager, similarRecipesListener, recipeId, API_REQUEST_DELAY * 2);
+        new  Thread(new Runnable() {
+
+            @Override
+            public void run() {
+              recipeDetailsC =  AppDatabase.getInstance(RecipeDetailsActivity.this)
+                                .RecipeDetailsCDao().getByRecipeDetailsResponseId(recipeId);
+              runOnUiThread(new Runnable() {
+                  @Override
+                  public void run() {
+                      if(recipeDetailsC!=null){
+                          Glide.with(RecipeDetailsActivity.this).load(R.drawable.ic_collect).into(btnFavorite);
+                          btnFavorite.setImageTintList(ColorStateList.valueOf(Color.YELLOW));
+                      }
+                  }
+              });
+            }
+        }).start();
     }
     // Implementing the recipeDetailsListener
     private final RecipeDetailsListener recipeDetailsListener = new RecipeDetailsListener() {
@@ -174,6 +239,7 @@
             textView_daily_requirements_coverage_value.setText(details[3] != null ? details[3] : "N/A");
             // Loading image using Picasso
             Picasso.get().load(response.image).into(imageView_meal_image);
+            path = response.image;
             // Use custom layout for recycler view
             recycler_meal_ingredients.setHasFixedSize(true);
             recycler_meal_ingredients.setLayoutManager(new LinearLayoutManager(RecipeDetailsActivity.this, LinearLayoutManager.HORIZONTAL, false));
@@ -190,6 +256,8 @@
         }
     };
 
+    private String path;
+
     // Implementing the similarRecipesListener
     private final SimilarRecipesListener similarRecipesListener = new SimilarRecipesListener() {
         @Override
@@ -232,12 +300,19 @@
             finish();
             startActivity(intent);
         } else if (itemId == R.id.nav_recipes) {
-            // Nothing happens
+            Intent intent = new Intent(RecipeDetailsActivity.this, RecipeActivity.class);
+            finish();
+            startActivity(intent);
         } else if (itemId == R.id.nav_search) {
             Intent intent2 = new Intent(RecipeDetailsActivity.this, AdvancedSearchActivity.class);
             finish();
             startActivity(intent2);
+        }else if (itemId == R.id.nav_shoppinglist) {
+            Intent intent2 = new Intent(RecipeDetailsActivity.this, CreateCategoryActivity.class);
+            finish();
+            startActivity(intent2);
         }
+
         drawerLayout.closeDrawer(GravityCompat.START);
         return true;
     }
@@ -256,41 +331,89 @@
 
 
     // Add to favorite list
-    MaterialButton btnFavorite;
+    ImageView btnFavorite;
     List<String> categories;
+    Spinner spinnerCategories;
     private void showFavoriteDialog() {
+
         View dialogView = getLayoutInflater().inflate(R.layout.dialog_add_to_favorites, null);
-        Spinner spinnerCategories = dialogView.findViewById(R.id.spinner_categories);
-        EditText editTextNewCategory = dialogView.findViewById(R.id.edit_new_category);
+        spinnerCategories = dialogView.findViewById(R.id.spinner_categories);
+        Button btTextNewCategory = dialogView.findViewById(R.id.bt_new_category);
         Button buttonSave = dialogView.findViewById(R.id.button_save);
         Button buttonCancel = dialogView.findViewById(R.id.button_cancel);
-
-        categories = getCategories();
-        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, categories);
-        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        spinnerCategories.setAdapter(adapter);
-
+        getCategories();
         AlertDialog.Builder builder = new AlertDialog.Builder(this);
         builder.setView(dialogView);
         AlertDialog dialog = builder.create();
-
+        btTextNewCategory.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent =new Intent(RecipeDetailsActivity.this, CreateCategoryActivity.class);
+                startActivity(intent);
+                dialog.dismiss();
+            }
+        });
         buttonSave.setOnClickListener(v -> {
-            String selectedCategory = spinnerCategories.getSelectedItem().toString();
-            String newCategory = editTextNewCategory.getText().toString().trim();
+            if(path==null||path.isEmpty()){
+                PopTip.show("Loading is still ongoing, please wait");
+                return;
+            }
+          RecipeDetailsC recipeDetailsC1 =new RecipeDetailsC();
+          recipeDetailsC1.recipeDetailsResponseId = recipeId;
+          Log.d("run",recipeId+"");
+          recipeDetailsC1.categoryBeanId = spinnerCategories.getSelectedItem().toString();
+          recipeDetailsC1.meal_servings =textView_meal_servings.getText().toString();
+          recipeDetailsC1.meal_ready =  textView_meal_ready.getText().toString();
+          recipeDetailsC1.meal_price = textView_meal_price.getText().toString();
+          recipeDetailsC1.meal_name = textView_meal_name.getText().toString();
+          recipeDetailsC1.imagPath =path;
+          recipeDetailsC = recipeDetailsC1;
 
-            if (!newCategory.isEmpty()) {
-                categories.add(newCategory);
-                selectedCategory = newCategory;
-            }
-            dialog.dismiss();
+          new Thread(new Runnable() {
+              @Override
+              public void run() {
+                  WaitDialog.show("loading.....");
+                AppDatabase.getInstance(RecipeDetailsActivity.this)
+                        .RecipeDetailsCDao().insert(recipeDetailsC1);
+                runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        WaitDialog.dismiss();
+                        PopTip.show("success");
+                        Glide.with(RecipeDetailsActivity.this).load(R.drawable.ic_collect).into(btnFavorite);
+                        btnFavorite.setImageTintList(ColorStateList.valueOf(Color.YELLOW));
+                    }
+                });
+              }
+          }).start();
+          dialog.dismiss();
         });
 
         buttonCancel.setOnClickListener(v -> dialog.dismiss());
 
         dialog.show();
     }
-
-    private List<String> getCategories() {
-        return new ArrayList<>(Arrays.asList("Favorite"));
+    List<String> list;
+    private void getCategories() {
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                List<CategoryBean> data = AppDatabase.getInstance(RecipeDetailsActivity.this)
+                        .categoryDao().getAllCategories();
+                List<String> categories = new ArrayList<>();
+                for(int i=0;i<data.size();i++){
+                    categories.add(data.get(i).text);
+                }
+                runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        ArrayAdapter<String> adapter = new ArrayAdapter<>(RecipeDetailsActivity.this,
+                                android.R.layout.simple_spinner_item, categories);
+                        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+                        spinnerCategories.setAdapter(adapter);
+                    }
+                });
+            }
+        }).start();
     }
 }
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/pocketchef/Dao/CategoryDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/CategoryDao.java b/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/CategoryDao.java
new file mode 100644
--- /dev/null	(date 1716727822000)
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/CategoryDao.java	(date 1716727822000)
@@ -0,0 +1,27 @@
+package sg.edu.np.mad.pocketchef.Dao;
+
+import androidx.room.Dao;
+import androidx.room.Insert;
+import androidx.room.Query;
+import androidx.room.Delete;
+import androidx.room.Update;
+
+import java.util.List;
+
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
+
+@Dao
+public interface CategoryDao {
+    @Insert
+    void insertCategory(CategoryBean category);
+
+    @Update
+    void updateCategory(CategoryBean category);
+
+
+    @Query("SELECT * FROM CategoryBean")
+    List<CategoryBean> getAllCategories();
+
+    @Delete
+    void deleteCategory(CategoryBean category);
+}
\ No newline at end of file
