Index: .idea/deploymentTargetDropDown.xml
===================================================================
diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
deleted file mode 100644
--- a/.idea/deploymentTargetDropDown.xml	
+++ /dev/null	
@@ -1,10 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="deploymentTargetDropDown">
-    <value>
-      <entry key="app">
-        <State />
-      </entry>
-    </value>
-  </component>
-</project>
\ No newline at end of file
Index: .idea/inspectionProfiles/Project_Default.xml
===================================================================
diff --git a/.idea/inspectionProfiles/Project_Default.xml b/.idea/inspectionProfiles/Project_Default.xml
deleted file mode 100644
--- a/.idea/inspectionProfiles/Project_Default.xml	
+++ /dev/null	
@@ -1,8 +0,0 @@
-<component name="InspectionProjectProfileManager">
-  <profile version="1.0">
-    <option name="myName" value="Project Default" />
-    <inspection_tool class="ExtractMethodRecommender" enabled="true" level="WARNING" enabled_by_default="true">
-      <option name="minLength" value="787" />
-    </inspection_tool>
-  </profile>
-</component>
\ No newline at end of file
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	
+++ /dev/null	
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: .idea/appInsightsSettings.xml
===================================================================
diff --git a/.idea/appInsightsSettings.xml b/.idea/appInsightsSettings.xml
deleted file mode 100644
--- a/.idea/appInsightsSettings.xml	
+++ /dev/null	
@@ -1,27 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="AppInsightsSettings">
-    <option name="selectedTabId" value="Android Vitals" />
-    <option name="tabSettings">
-      <map>
-        <entry key="Firebase Crashlytics">
-          <value>
-            <InsightsFilterSettings>
-              <option name="connection">
-                <ConnectionSetting>
-                  <option name="appId" value="PLACEHOLDER" />
-                  <option name="mobileSdkAppId" value="" />
-                  <option name="projectId" value="" />
-                  <option name="projectNumber" value="" />
-                </ConnectionSetting>
-              </option>
-              <option name="signal" value="SIGNAL_UNSPECIFIED" />
-              <option name="timeIntervalDays" value="THIRTY_DAYS" />
-              <option name="visibilityType" value="ALL" />
-            </InsightsFilterSettings>
-          </value>
-        </entry>
-      </map>
-    </option>
-  </component>
-</project>
\ No newline at end of file
Index: app/src/main/res/layout/item_createcategory.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/item_createcategory.xml b/app/src/main/res/layout/item_createcategory.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/item_createcategory.xml	
@@ -0,0 +1,69 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    xmlns:app="http://schemas.android.com/apk/res-auto">
+
+    <androidx.constraintlayout.widget.ConstraintLayout
+        android:id="@+id/cl"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        >
+
+    <ImageView
+        android:id="@+id/iv_str"
+        android:layout_width="160dp"
+        android:layout_height="160dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        android:layout_margin="10dp"
+        />
+
+    <TextView
+        android:id="@+id/tv_str"
+        android:layout_width="160dp"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/iv_str"
+        android:layout_margin="10dp"
+        android:gravity="center"
+        />
+    </androidx.constraintlayout.widget.ConstraintLayout>
+    <LinearLayout
+        android:id="@+id/add_ll"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        android:visibility="gone"
+        android:gravity="center_vertical"
+        android:orientation="vertical">
+        <ImageView
+            android:gravity="center"
+            android:id="@+id/add_picture"
+            android:layout_width="160dp"
+            android:layout_height="160dp"
+            android:background="@drawable/blue_dashed_line"
+            android:layout_margin="10dp"
+            android:src="@drawable/baseline_add_24"
+            />
+        <com.google.android.material.textfield.TextInputLayout
+            android:id="@+id/ed"
+            android:layout_width="180dp"
+            android:layout_height="wrap_content"
+            android:hint="Category Name"
+            android:padding="10dp"
+            >
+
+            <com.google.android.material.textfield.TextInputEditText
+                android:id="@+id/ed_add"
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:inputType="text" />
+        </com.google.android.material.textfield.TextInputLayout>
+    </LinearLayout>
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/pocketchef/CreateCategoryActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/CreateCategoryActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/CreateCategoryActivity.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/CreateCategoryActivity.java	
@@ -0,0 +1,213 @@
+package sg.edu.np.mad.pocketchef;
+
+import android.net.Uri;
+import android.os.Bundle;
+import android.view.View;
+import android.widget.EditText;
+import android.widget.ImageView;
+
+import androidx.activity.EdgeToEdge;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.core.graphics.Insets;
+import androidx.core.view.ViewCompat;
+import androidx.core.view.WindowInsetsCompat;
+import androidx.recyclerview.widget.GridLayoutManager;
+
+import com.bumptech.glide.Glide;
+import com.bumptech.glide.load.engine.DiskCacheStrategy;
+import com.google.android.material.textfield.TextInputEditText;
+import com.kongzue.albumdialog.PhotoAlbumDialog;
+import com.kongzue.albumdialog.util.DialogImplCallback;
+import com.kongzue.albumdialog.util.SelectPhotoCallback;
+import com.kongzue.dialogx.dialogs.FullScreenDialog;
+import com.kongzue.dialogx.dialogs.PopTip;
+
+import java.lang.ref.WeakReference;
+import java.util.ArrayList;
+import java.util.List;
+import java.util.zip.Inflater;
+
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
+
+import sg.edu.np.mad.pocketchef.base.AppDatabase;
+import sg.edu.np.mad.pocketchef.base.CommonAdapter;
+import sg.edu.np.mad.pocketchef.databinding.ActivityCreateCategoryBinding;
+import sg.edu.np.mad.pocketchef.databinding.ItemCreatecategoryBinding;
+
+public class CreateCategoryActivity extends AppCompatActivity {
+
+    private ActivityCreateCategoryBinding binding;
+    private CommonAdapter<ItemCreatecategoryBinding, CategoryBean> commonAdapter;
+
+    private List<CategoryBean> datalist;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        EdgeToEdge.enable(this);
+        binding = ActivityCreateCategoryBinding.inflate(getLayoutInflater());
+        setContentView(binding.getRoot());
+        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {
+            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());
+            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);
+            return insets;
+        });
+        init();
+        path="";
+        binding.bt.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                String ed = editText.getText().toString();
+                if(ed.isEmpty()||path.isEmpty()){
+                    PopTip.show("Please enter the name of the new type");
+                    return;
+                }
+                CategoryBean categoryBean =new CategoryBean(path,ed);
+               new Thread(new Runnable() {
+                   @Override
+                   public void run() {
+                       AppDatabase.getInstance(CreateCategoryActivity.this)
+                               .categoryDao().insertCategory(categoryBean);
+                       runOnUiThread(new Runnable() {
+                           @Override
+                           public void run() {
+                               PopTip.show("Success");
+                               datalist.remove(datalist.size()-1);
+                               datalist.add(categoryBean);
+                               datalist.add(new CategoryBean("a","a"));
+                               commonAdapter.setData(datalist);
+                               editText.setText("");
+                               path="";
+                           }
+                       });
+
+                   }
+               }).start();
+            }
+        });
+    }
+
+    private TextInputEditText editText;
+    private void init(){
+        GridLayoutManager gridLayoutManager = new GridLayoutManager(this, 2);
+        binding.rv.setLayoutManager(gridLayoutManager);
+        binding.rv.setItemViewCacheSize(100);
+        commonAdapter = new CommonAdapter<ItemCreatecategoryBinding, CategoryBean>(new ArrayList<>()) {
+            @Override
+            protected int getType(int position) {
+                if(datalist==null||datalist.isEmpty()||datalist.size()-1==position){
+                    return -1;
+                }else{
+                    return position;
+                }
+            }
+
+            @Override
+            protected void show(ItemCreatecategoryBinding holder, int position, CategoryBean cetegoryBean) {
+                holder.cl.setVisibility(View.GONE);
+                holder.addLl.setVisibility(View.GONE);
+                    if(getItemViewType(position)==-1){
+                        holder.addLl.setVisibility(View.VISIBLE);
+                        holder.cl.setVisibility(View.GONE);
+                        try {
+                            holder.addPicture.setImageResource(R.drawable.baseline_add_24);
+                        }catch (Exception e){
+
+                        }
+
+                        holder.addPicture.setOnClickListener(new View.OnClickListener() {
+                            @Override
+                            public void onClick(View v) {
+                                openPicture(  holder.addPicture);
+                            }
+                        });
+                        editText = holder.edAdd;
+                    }else{
+                        holder.addLl.setVisibility(View.GONE);
+                        holder.cl.setVisibility(View.VISIBLE);
+                        if(cetegoryBean.imagePath.equals("Favorite")){
+                            holder.tvStr.setText("Favorite");
+                        try {
+                            holder.ivStr.setImageResource(R.drawable.pocketchef_logo);
+                        }catch (Exception e){
+
+                        }
+
+                        }else if(!cetegoryBean.imagePath.equals("a")){
+                            holder.tvStr.setText(cetegoryBean.text);
+                            try {
+                                Glide.with(CreateCategoryActivity.this)
+                                        .load(cetegoryBean.imagePath)
+                                        .into(holder.ivStr);
+                            }catch (Exception e){
+
+                            }
+
+                        }
+                        }
+                    }
+        };
+        binding.rv.setAdapter(commonAdapter);
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+               datalist= AppDatabase.getInstance(CreateCategoryActivity.this)
+                        .categoryDao().getAllCategories();
+               if(datalist==null||datalist.isEmpty()){
+                   datalist =new ArrayList<>();
+               }
+               CategoryBean categoryBean =new CategoryBean("a","a");
+               datalist.add(categoryBean);
+               runOnUiThread(new Runnable() {
+                   @Override
+                   public void run() {
+                       commonAdapter.setData(datalist);
+                   }
+               });
+
+            }
+        }).start();
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+
+    }
+
+    private String path="";
+    private void openPicture(ImageView iv){
+        PhotoAlbumDialog.build()
+                .setCompressQuality(100)
+                .setCompressPhoto(false)
+                .setMaxSelectPhotoCount(1)
+                .setClip(true)
+                .setMaxSize(75)
+                .setMaxWidth(75)
+                .setMaxHeight(75)
+                .setCallback(new SelectPhotoCallback() {
+                    //单张模式回调（二者其一任选）
+                    @Override
+                    public void selectedPhoto(String selectedPhotos) {
+                        path = selectedPhotos;
+                        try {
+                            Glide.with(CreateCategoryActivity.this).load(selectedPhotos)
+                                    .centerCrop()
+                                    .into(iv);
+                        }catch (Exception e){
+
+                        }
+
+                    }
+                })
+                .setDialogDialogImplCallback(new DialogImplCallback<FullScreenDialog>() {
+                    @Override
+                    public void onDialogCreated(FullScreenDialog dialog) {
+
+                    }
+
+
+                })
+                .show(CreateCategoryActivity.this);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/drawable/blue_dashed_line.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/blue_dashed_line.xml b/app/src/main/res/drawable/blue_dashed_line.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/blue_dashed_line.xml	
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="utf-8"?>
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <solid android:color="@android:color/transparent" />
+    <stroke
+        android:width="2dp"
+        android:color="#0000FF"
+        android:dashWidth="10dp"
+        android:dashGap="5dp" />
+</shape>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"jbr-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\r\n  </component>\r\n  <component name=\"ProjectType\">\r\n    <option name=\"id\" value=\"Android\" />\r\n  </component>\r\n  <component name=\"VisualizationToolProject\">\r\n    <option name=\"state\">\r\n      <ProjectState>\r\n        <option name=\"scale\" value=\"0.7635135135135135\" />\r\n      </ProjectState>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -6,11 +6,4 @@
   <component name="ProjectType">
     <option name="id" value="Android" />
   </component>
-  <component name="VisualizationToolProject">
-    <option name="state">
-      <ProjectState>
-        <option name="scale" value="0.7635135135135135" />
-      </ProjectState>
-    </option>
-  </component>
 </project>
\ No newline at end of file
Index: app/src/main/res/drawable/baseline_add_24.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/drawable/baseline_add_24.xml b/app/src/main/res/drawable/baseline_add_24.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/drawable/baseline_add_24.xml	
@@ -0,0 +1,5 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="24dp" android:tint="#1796EA" android:viewportHeight="24" android:viewportWidth="24" android:width="24dp">
+      
+    <path android:fillColor="@android:color/white" android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z"/>
+    
+</vector>
Index: app/src/main/res/layout/dialog_add_to_favorites.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:orientation=\"vertical\"\r\n    android:padding=\"16dp\">\r\n\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:text=\"Save to Favorites\"\r\n        android:textSize=\"18sp\"\r\n        android:textStyle=\"bold\"\r\n        android:paddingBottom=\"8dp\" />\r\n\r\n    <Spinner\r\n        android:id=\"@+id/spinner_categories\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginBottom=\"16dp\"\r\n        android:padding=\"10dp\" />\r\n\r\n    <EditText\r\n        android:id=\"@+id/edit_new_category\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:hint=\"Create new category\"\r\n        android:padding=\"10dp\" />\r\n\r\n    <LinearLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:orientation=\"horizontal\"\r\n        android:layout_marginTop=\"16dp\"\r\n        android:gravity=\"end\">\r\n\r\n        <Button\r\n            android:id=\"@+id/button_cancel\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Cancel\" />\r\n\r\n        <Button\r\n            android:id=\"@+id/button_save\"\r\n            android:layout_width=\"wrap_content\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"Save\"\r\n            android:layout_marginStart=\"8dp\" />\r\n    </LinearLayout>\r\n</LinearLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/dialog_add_to_favorites.xml b/app/src/main/res/layout/dialog_add_to_favorites.xml
--- a/app/src/main/res/layout/dialog_add_to_favorites.xml	
+++ b/app/src/main/res/layout/dialog_add_to_favorites.xml	
@@ -20,12 +20,12 @@
         android:layout_marginBottom="16dp"
         android:padding="10dp" />
 
-    <EditText
-        android:id="@+id/edit_new_category"
+    <Button
+        android:id="@+id/bt_new_category"
         android:layout_width="match_parent"
         android:layout_height="wrap_content"
-        android:hint="Create new category"
-        android:padding="10dp" />
+        android:text="create category"
+        />
 
     <LinearLayout
         android:layout_width="match_parent"
Index: app/src/main/java/sg/edu/np/mad/pocketchef/base/AppDatabase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/base/AppDatabase.java b/app/src/main/java/sg/edu/np/mad/pocketchef/base/AppDatabase.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/base/AppDatabase.java	
@@ -0,0 +1,30 @@
+package sg.edu.np.mad.pocketchef.base;
+
+import android.content.Context;
+
+import androidx.room.Database;
+import androidx.room.Room;
+import androidx.room.RoomDatabase;
+
+import sg.edu.np.mad.pocketchef.Dao.CategoryDao;
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
+
+@Database(entities = {CategoryBean.class}, version = 1)
+public abstract class AppDatabase extends RoomDatabase {
+    public abstract CategoryDao categoryDao();
+    private static volatile AppDatabase instance;
+    public static AppDatabase getInstance(Context context) {
+        if (instance == null) {
+            synchronized (AppDatabase.class) {
+                if (instance == null) {
+                    instance = Room.databaseBuilder(
+                            context.getApplicationContext(),
+                            AppDatabase.class,
+                            "app.db"
+                    ).build();
+                }
+            }
+        }
+        return instance;
+    }
+}
Index: app/src/main/java/sg/edu/np/mad/pocketchef/base/ViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/base/ViewHolder.java b/app/src/main/java/sg/edu/np/mad/pocketchef/base/ViewHolder.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/base/ViewHolder.java	
@@ -0,0 +1,12 @@
+package sg.edu.np.mad.pocketchef.base;
+
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.viewbinding.ViewBinding;
+
+public class ViewHolder<V extends ViewBinding> extends RecyclerView.ViewHolder {
+    protected V bind;
+    public ViewHolder(V bind) {
+        super(bind.getRoot());
+        this.bind = bind;
+    }
+}
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>plugins {\r\n    alias(libs.plugins.android.application)\r\n\r\n    id(\"com.google.gms.google-services\")\r\n}\r\n\r\nandroid {\r\n    namespace = \"sg.edu.np.mad.pocketchef\"\r\n    compileSdk = 34\r\n\r\n    defaultConfig {\r\n        applicationId = \"sg.edu.np.mad.pocketchef\"\r\n        minSdk = 33\r\n        targetSdk = 34\r\n        versionCode = 1\r\n        versionName = \"1.0\"\r\n\r\n        testInstrumentationRunner = \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            isMinifyEnabled = false\r\n            proguardFiles(\r\n                getDefaultProguardFile(\"proguard-android-optimize.txt\"),\r\n                \"proguard-rules.pro\"\r\n            )\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility = JavaVersion.VERSION_1_8\r\n        targetCompatibility = JavaVersion.VERSION_1_8\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation(platform(\"com.google.firebase:firebase-bom:33.0.0\"))\r\n    implementation(\"com.google.firebase:firebase-analytics\")\r\n    implementation(\"com.google.firebase:firebase-auth\")\r\n    implementation(\"com.google.firebase:firebase-database\")\r\n    implementation(\"de.hdodenhof:circleimageview:3.1.0\")\r\n    implementation(\"com.squareup.retrofit2:retrofit:2.11.0\")\r\n    implementation(\"com.github.bumptech.glide:glide:4.16.0\")\r\n    implementation(\"com.google.android.material:material:1.7.0\")\r\n    implementation(\"com.squareup.retrofit2:converter-gson:2.9.0\")\r\n    implementation(\"com.squareup.picasso:picasso:2.8\")\r\n    implementation(\"androidx.constraintlayout:constraintlayout:2.0.0\")\r\n    implementation(\"io.github.glailton.expandabletextview:expandabletextview:1.0.4\")\r\n    implementation(\"org.jsoup:jsoup:1.14.3\")\r\n    implementation(\"androidx.core:core-splashscreen:1.0.0-alpha01\")\r\n    implementation(\"androidx.appcompat:appcompat:1.6.1\")\r\n    implementation(libs.appcompat)\r\n    implementation(libs.material)\r\n    implementation(libs.activity)\r\n    implementation(libs.constraintlayout)\r\n    implementation(libs.firebase.storage)\r\n    testImplementation(libs.junit)\r\n    androidTestImplementation(libs.ext.junit)\r\n    androidTestImplementation(libs.espresso.core)\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	
+++ b/app/build.gradle.kts	
@@ -10,7 +10,7 @@
 
     defaultConfig {
         applicationId = "sg.edu.np.mad.pocketchef"
-        minSdk = 33
+        minSdk = 27
         targetSdk = 34
         versionCode = 1
         versionName = "1.0"
@@ -27,6 +27,9 @@
             )
         }
     }
+    buildFeatures {
+        viewBinding =true
+    }
     compileOptions {
         sourceCompatibility = JavaVersion.VERSION_1_8
         targetCompatibility = JavaVersion.VERSION_1_8
@@ -57,4 +60,11 @@
     testImplementation(libs.junit)
     androidTestImplementation(libs.ext.junit)
     androidTestImplementation(libs.espresso.core)
+    val dialogx_version = "0.0.50.beta2"
+    implementation ("com.github.kongzue.DialogX:DialogX:${dialogx_version}")
+    implementation ("com.github.kongzue.DialogXSample:AlbumDialog:0.0.12")
+    implementation ("com.github.bumptech.glide:glide:4.16.0")
+    implementation ("androidx.room:room-runtime:2.6.1")
+    annotationProcessor ("androidx.room:room-compiler:2.6.1")
+    implementation ("com.github.kongzue.DialogXSample:FileDialog:0.0.12")
 }
\ No newline at end of file
Index: app/src/main/java/sg/edu/np/mad/pocketchef/Dao/CategoryDao.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/CategoryDao.java b/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/CategoryDao.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/Dao/CategoryDao.java	
@@ -0,0 +1,22 @@
+package sg.edu.np.mad.pocketchef.Dao;
+
+import androidx.room.Dao;
+import androidx.room.Insert;
+import androidx.room.Query;
+import androidx.room.Delete;
+
+import java.util.List;
+
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
+
+@Dao
+public interface CategoryDao {
+    @Insert
+    void insertCategory(CategoryBean category);
+
+    @Query("SELECT * FROM CategoryBean")
+    List<CategoryBean> getAllCategories();
+
+    @Delete
+    void deleteCategory(CategoryBean category);
+}
\ No newline at end of file
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>pluginManagement {\r\n    repositories {\r\n        google {\r\n            content {\r\n                includeGroupByRegex(\"com\\\\.android.*\")\r\n                includeGroupByRegex(\"com\\\\.google.*\")\r\n                includeGroupByRegex(\"androidx.*\")\r\n            }\r\n        }\r\n        mavenCentral()\r\n        gradlePluginPortal()\r\n    }\r\n}\r\ndependencyResolutionManagement {\r\n    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)\r\n    repositories {\r\n        google()\r\n        mavenCentral()\r\n    }\r\n}\r\n\r\nrootProject.name = \"pocketchef\"\r\ninclude(\":app\")\r\n 
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle.kts b/settings.gradle.kts
--- a/settings.gradle.kts	
+++ b/settings.gradle.kts	
@@ -7,6 +7,7 @@
                 includeGroupByRegex("androidx.*")
             }
         }
+        maven { url = uri("https://jitpack.io") }
         mavenCentral()
         gradlePluginPortal()
     }
@@ -14,6 +15,7 @@
 dependencyResolutionManagement {
     repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
     repositories {
+        maven { url = uri("https://jitpack.io") }
         google()
         mavenCentral()
     }
Index: app/src/main/java/sg/edu/np/mad/pocketchef/base/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/base/App.java b/app/src/main/java/sg/edu/np/mad/pocketchef/base/App.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/base/App.java	
@@ -0,0 +1,14 @@
+package sg.edu.np.mad.pocketchef.base;
+
+import android.app.Application;
+
+import com.kongzue.dialogx.DialogX;
+
+public class App extends Application {
+
+    @Override
+    public void onCreate() {
+        super.onCreate();
+        DialogX.init(this);
+    }
+}
Index: app/src/main/java/sg/edu/np/mad/pocketchef/base/CommonAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/base/CommonAdapter.java b/app/src/main/java/sg/edu/np/mad/pocketchef/base/CommonAdapter.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/base/CommonAdapter.java	
@@ -0,0 +1,69 @@
+package sg.edu.np.mad.pocketchef.base;
+
+import android.view.LayoutInflater;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.recyclerview.widget.RecyclerView;
+import androidx.viewbinding.ViewBinding;
+
+import java.lang.reflect.Method;
+import java.lang.reflect.ParameterizedType;
+import java.util.List;
+
+public abstract class CommonAdapter<V extends ViewBinding,T> extends RecyclerView.Adapter<ViewHolder<V>> {
+
+    private List<T> data;
+    protected abstract int getType(int position);
+    @Override
+    public int getItemViewType(int position) {
+        return getType(position);
+    }
+
+    public CommonAdapter(List<T> data) {
+        this.data = data;
+    }
+    @NonNull
+    @Override
+    public ViewHolder<V> onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        return new ViewHolder(getViewBinding(parent));
+    }
+
+    private V getViewBinding(ViewGroup parent) {
+        V bind = null;
+        ParameterizedType type = (ParameterizedType) getClass().getGenericSuperclass();
+        Class<V> clazz = (Class<V>) type.getActualTypeArguments()[0];
+        try {
+            Method inflate = clazz.getDeclaredMethod("inflate", LayoutInflater.class, ViewGroup.class, boolean.class);
+            bind = (V) inflate.invoke(null, LayoutInflater.from(parent.getContext()), parent, false);
+        } catch (Exception e) {
+           e.printStackTrace();
+        }
+        return bind;
+    }
+
+
+    @Override
+    public void onBindViewHolder(@NonNull ViewHolder<V> holder, int position) {
+        show(holder.bind, position, data.get(position));
+    }
+
+    protected abstract void show(V holder, int position, T t);
+
+
+    public void setData(List<T> data) {
+        this.data = data;
+        notifyDataSetChanged();
+    }
+
+    @Override
+    public int getItemCount() {
+        return data.size();
+    }
+
+    public CommonAdapter setText(TextView textView, String data){
+        textView.setText(data);
+        return this;
+    }
+}
Index: app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport android.app.Dialog;\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Spinner;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\n\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Models.Database;\r\n\r\npublic class AddToFavoritesDialog extends Dialog {\r\n    private Context context;\r\n    private int recipeId;\r\n    private Spinner categorySpinner;\r\n    private EditText editTextNewCategory;\r\n    private Button buttonSave, buttonCancel;\r\n\r\n    public AddToFavoritesDialog(@NonNull Context context, int recipeId) {\r\n        super(context);\r\n        this.context = context;\r\n        this.recipeId = recipeId;\r\n    }\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.dialog_add_to_favorites);\r\n\r\n        categorySpinner = findViewById(R.id.spinner_categories);\r\n        editTextNewCategory = findViewById(R.id.edit_new_category);\r\n        buttonSave = findViewById(R.id.button_save);\r\n        buttonCancel = findViewById(R.id.button_cancel);\r\n\r\n        loadCategories();\r\n\r\n        buttonSave.setOnClickListener(v -> saveToFavorites());\r\n        buttonCancel.setOnClickListener(v -> dismiss());\r\n    }\r\n\r\n    private void loadCategories() {\r\n        // Fetch categories from the database or data source\r\n        List<String> categories = Database.getInstance().getFavoriteCategories();\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(context, android.R.layout.simple_spinner_item, categories);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        categorySpinner.setAdapter(adapter);\r\n    }\r\n\r\n    private void saveToFavorites() {\r\n        String selectedCategory = categorySpinner.getSelectedItem().toString();\r\n        String newCategory = editTextNewCategory.getText().toString().trim();\r\n\r\n        if (!newCategory.isEmpty()) {\r\n            // Add new category to database\r\n            Database.getInstance().addFavoriteCategory(newCategory);\r\n            selectedCategory = newCategory;\r\n        }\r\n\r\n        // Save recipe to the selected category\r\n        Database.getInstance().addRecipeToCategory(recipeId, selectedCategory);\r\n        Toast.makeText(context, \"Recipe added to favorites\", Toast.LENGTH_SHORT).show();\r\n        dismiss();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java b/app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/AddToFavoritesDialog.java	
@@ -34,7 +34,7 @@
         setContentView(R.layout.dialog_add_to_favorites);
 
         categorySpinner = findViewById(R.id.spinner_categories);
-        editTextNewCategory = findViewById(R.id.edit_new_category);
+
         buttonSave = findViewById(R.id.button_save);
         buttonCancel = findViewById(R.id.button_cancel);
 
Index: app/src/main/res/menu/main_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n\r\n    <group>\r\n        <item\r\n            android:id=\"@+id/nav_home\"\r\n            android:icon=\"@drawable/ic_home\"\r\n            android:title=\"Home\" />\r\n        <item\r\n            android:id=\"@+id/nav_recipes\"\r\n            android:icon=\"@drawable/ic_recipes\"\r\n            android:title=\"Recipes\" />\r\n        <item\r\n            android:id=\"@+id/nav_search\"\r\n            android:icon=\"@drawable/ic_search_menu\"\r\n            android:title=\"Advanced Search\" />\r\n        <item\r\n            android:id=\"@+id/nav_shoppinglist\"\r\n            android:icon=\"@drawable/ic_shopping_list\"\r\n            android:title=\"shopping list\" />\r\n    </group>\r\n        <item android:title=\"Profile\">\r\n            <menu>\r\n                <group android:checkableBehavior=\"single\">\r\n                <item\r\n                    android:id=\"@+id/nav_login\"\r\n                    android:icon=\"@drawable/ic_login\"\r\n                    android:title=\"Login\" />\r\n                <item\r\n                    android:id=\"@+id/nav_profile\"\r\n                    android:icon=\"@drawable/ic_profile\"\r\n                    android:title=\"Profile\" />\r\n                <item\r\n                    android:id=\"@+id/nav_logout\"\r\n                    android:icon=\"@drawable/ic_logout\"\r\n                    android:title=\"Logout\" />\r\n                </group>\r\n            </menu>\r\n        </item>\r\n    <item android:title=\"Additional Features\">\r\n        <menu>\r\n            <item\r\n                android:id=\"@+id/nav_addfeature1\"\r\n                android:icon=\"@drawable/pocketchef_logo\"\r\n                android:title=\"feature1\" />\r\n            <item\r\n                android:id=\"@+id/nav_addfeature2\"\r\n                android:icon=\"@drawable/pocketchef_logo\"\r\n                android:title=\"feature2\" />\r\n            <item\r\n                android:id=\"@+id/nav_addfeature3\"\r\n                android:icon=\"@drawable/pocketchef_logo\"\r\n                android:title=\"feature3\" />\r\n        </menu>\r\n    </item>\r\n</menu>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/menu/main_menu.xml b/app/src/main/res/menu/main_menu.xml
--- a/app/src/main/res/menu/main_menu.xml	
+++ b/app/src/main/res/menu/main_menu.xml	
@@ -10,6 +10,7 @@
             android:id="@+id/nav_recipes"
             android:icon="@drawable/ic_recipes"
             android:title="Recipes" />
+
         <item
             android:id="@+id/nav_search"
             android:icon="@drawable/ic_search_menu"
@@ -17,7 +18,7 @@
         <item
             android:id="@+id/nav_shoppinglist"
             android:icon="@drawable/ic_shopping_list"
-            android:title="shopping list" />
+            android:title="Favorite List" />
     </group>
         <item android:title="Profile">
             <menu>
Index: app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef.Adapters;\r\n\r\nimport android.content.Context;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Models.Ingredient;\r\nimport sg.edu.np.mad.pocketchef.R;\r\n\r\npublic class InstructionsIngredientsAdapter extends RecyclerView.Adapter<InstructionIngredientsViewHolder> {\r\n    final Context context;\r\n    final List<Ingredient> list;\r\n\r\n    public InstructionsIngredientsAdapter(Context context, List<Ingredient> list) {\r\n        this.context = context;\r\n        this.list = list;\r\n    }\r\n\r\n    @NonNull\r\n    @Override\r\n    public InstructionIngredientsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {\r\n        return new InstructionIngredientsViewHolder(LayoutInflater.from(context).inflate(R.layout.list_instructions_step_items, parent, false));\r\n    }\r\n\r\n    @Override\r\n    public void onBindViewHolder(@NonNull InstructionIngredientsViewHolder holder, int position) {\r\n        if (list.isEmpty()) {\r\n            holder.textView_instructions_step_item.setText(\"No Ingredients\");\r\n            // Optionally hide the imageView_instructions_step_items if needed\r\n            holder.imageView_instructions_step_items.setVisibility(View.GONE);\r\n        } else {\r\n            holder.textView_instructions_step_item.setText(list.get(position).name);\r\n            holder.textView_instructions_step_item.setSelected(true);\r\n            Picasso.get().load(list.get(position).image)\r\n                    .fit()\r\n                    .centerCrop()\r\n                    .into(holder.imageView_instructions_step_items);\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public int getItemCount() {\r\n        return Math.max(1, list.size());\r\n    }\r\n}\r\n\r\nclass InstructionIngredientsViewHolder extends RecyclerView.ViewHolder {\r\n    final ImageView imageView_instructions_step_items;\r\n    final TextView textView_instructions_step_item;\r\n    public InstructionIngredientsViewHolder(@NonNull View itemView) {\r\n        super(itemView);\r\n        imageView_instructions_step_items = itemView.findViewById(R.id.imageView_instructions_step_items);\r\n        textView_instructions_step_item = itemView.findViewById(R.id.textView_instructions_step_item);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java b/app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/Adapters/InstructionsIngredientsAdapter.java	
@@ -41,10 +41,15 @@
         } else {
             holder.textView_instructions_step_item.setText(list.get(position).name);
             holder.textView_instructions_step_item.setSelected(true);
-            Picasso.get().load(list.get(position).image)
-                    .fit()
-                    .centerCrop()
-                    .into(holder.imageView_instructions_step_items);
+            try {
+                Picasso.get().load(list.get(position).image)
+                        .fit()
+                        .centerCrop()
+                        .into(holder.imageView_instructions_step_items);
+            }catch (Exception e){
+
+            }
+
         }
     }
 
Index: app/src/main/java/sg/edu/np/mad/pocketchef/Models/CategoryBean.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/Models/CategoryBean.java b/app/src/main/java/sg/edu/np/mad/pocketchef/Models/CategoryBean.java
new file mode 100644
--- /dev/null	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/Models/CategoryBean.java	
@@ -0,0 +1,18 @@
+package sg.edu.np.mad.pocketchef.Models;
+
+import androidx.room.Entity;
+import androidx.room.PrimaryKey;
+
+@Entity
+public class CategoryBean {
+    @PrimaryKey(autoGenerate = true)
+    public int id; // 通常，我们会为每个实体添加一个主键
+
+    public CategoryBean(String imagePath, String text) {
+        this.imagePath = imagePath;
+        this.text = text;
+    }
+
+    public String imagePath;
+    public String text;
+}
Index: .idea/gradle.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"gradleJvm\" value=\"#GRADLE_LOCAL_JAVA_HOME\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n        <option name=\"resolveExternalAnnotations\" value=\"false\" />\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/gradle.xml b/.idea/gradle.xml
--- a/.idea/gradle.xml	
+++ b/.idea/gradle.xml	
@@ -1,6 +1,5 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="GradleMigrationSettings" migrationVersion="1" />
   <component name="GradleSettings">
     <option name="linkedExternalProjectsSettings">
       <GradleProjectSettings>
Index: app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package sg.edu.np.mad.pocketchef;\r\n\r\nimport android.app.AlertDialog;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.ProgressBar;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.activity.EdgeToEdge;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.ActionBarDrawerToggle;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.constraintlayout.widget.ConstraintLayout;\r\nimport androidx.core.graphics.Insets;\r\nimport androidx.core.view.GravityCompat;\r\nimport androidx.core.view.ViewCompat;\r\nimport androidx.core.view.WindowInsetsCompat;\r\nimport androidx.drawerlayout.widget.DrawerLayout;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport com.google.android.material.appbar.MaterialToolbar;\r\nimport com.google.android.material.button.MaterialButton;\r\nimport com.google.android.material.navigation.NavigationView;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.text.MessageFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\nimport sg.edu.np.mad.pocketchef.Adapters.IngredientsAdapater;\r\nimport sg.edu.np.mad.pocketchef.Adapters.InstructionsAdapter;\r\nimport sg.edu.np.mad.pocketchef.Adapters.SimilarRecipeAdapter;\r\nimport sg.edu.np.mad.pocketchef.Listener.InstructionsListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.RecipeClickListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.RecipeDetailsListener;\r\nimport sg.edu.np.mad.pocketchef.Listener.SimilarRecipesListener;\r\nimport sg.edu.np.mad.pocketchef.Models.InstructionsResponse;\r\nimport sg.edu.np.mad.pocketchef.Models.RecipeDetailsResponse;\r\nimport sg.edu.np.mad.pocketchef.Models.SimilarRecipeResponse;\r\nimport sg.edu.np.mad.pocketchef.Models.SummaryParser;\r\n\r\npublic class RecipeDetailsActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {\r\n\r\n    // Global variables for activity\r\n    private static final long API_REQUEST_DELAY = 1000;\r\n    int recipeId;\r\n    TextView textView_meal_name, textView_meal_source, textView_meal_servings, textView_meal_ready, textView_meal_price,\r\n            textView_protein_value, textView_fat_value, textView_calories_value, textView_daily_requirements_coverage_value;\r\n    ImageView imageView_meal_image, imageView_nutrition;\r\n    RecyclerView recycler_meal_ingredients, recycler_meal_similar, recycler_meal_instructions;\r\n    RequestManager manager;\r\n    ProgressBar progressBar;\r\n    IngredientsAdapater ingredientsAdapater;\r\n    SimilarRecipeAdapter similarRecipeAdapter;\r\n    InstructionsAdapter instructionsAdapter;\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    MaterialToolbar toolbar;\r\n    MenuItem nav_home, nav_recipes, nav_search;\r\n    ConstraintLayout recipeDetailsLayout, nutritionLabelLayout;\r\n    MaterialButton buttonNutritionLabel;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n\r\n        super.onCreate(savedInstanceState);\r\n        EdgeToEdge.enable(this);\r\n        setContentView(R.layout.activity_recipe_details);\r\n        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -> {\r\n            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());\r\n            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);\r\n            return insets;\r\n        });\r\n\r\n        findViews();\r\n        recipeId = Integer.parseInt(getIntent().getStringExtra(\"id\"));\r\n        // Utilising RequestManager class methods\r\n        loadRecipeDetailsWithStaggeredApiCalls();\r\n        // Set up nav menu\r\n        navigationView.bringToFront();\r\n        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(RecipeDetailsActivity.this, drawerLayout, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);\r\n        drawerLayout.addDrawerListener(toggle);\r\n        toggle.syncState();\r\n        navigationView.setNavigationItemSelectedListener(RecipeDetailsActivity.this);\r\n        navigationView.setCheckedItem(nav_home);\r\n        loadNutritionLabelImage(); // Load the image when the layout becomes visible\r\n        // Set up the OnClickListener for the button\r\n        buttonNutritionLabel.setOnClickListener(v -> {\r\n            if (nutritionLabelLayout.getVisibility() == View.VISIBLE) {\r\n                nutritionLabelLayout.setVisibility(View.GONE);\r\n            } else {\r\n                nutritionLabelLayout.setVisibility(View.VISIBLE);\r\n            }\r\n        });\r\n\r\n        //set the onclicklistener for the favorite button\r\n        btnFavorite.setOnClickListener(v -> showFavoriteDialog());\r\n    }\r\n    // Intialise objects\r\n    private void findViews() {\r\n        // Intialise Progress Bar\r\n        progressBar = findViewById(R.id.progressBar);\r\n        // Intialise Text Views\r\n        textView_meal_name = findViewById(R.id.textView_meal_name);\r\n        textView_meal_source = findViewById(R.id.textView_meal_source);\r\n        // Text Views in Grid Layout\r\n        textView_protein_value = findViewById(R.id.textView_protein_value);\r\n        textView_fat_value = findViewById(R.id.textView_fat_value);\r\n        textView_calories_value = findViewById(R.id.textView_calories_value);\r\n        textView_daily_requirements_coverage_value = findViewById(R.id.textView_daily_requirements_coverage_value);\r\n        // Text Views for below Grid Layout\r\n        textView_meal_servings = findViewById(R.id.textView_meal_servings);\r\n        textView_meal_ready = findViewById(R.id.textView_meal_ready);\r\n        textView_meal_price = findViewById(R.id.textView_meal_price);\r\n        // Intialise Image Views\r\n        imageView_meal_image = findViewById(R.id.imageView_meal_image);\r\n        // Intialise Recycler Views\r\n        recycler_meal_ingredients = findViewById(R.id.recycler_meal_ingredients);\r\n        recycler_meal_similar = findViewById(R.id.recycler_meal_similar);\r\n        recycler_meal_instructions = findViewById(R.id.recycler_meal_instructions);\r\n        // Navigation Menu set up\r\n        drawerLayout = findViewById(R.id.drawer_layout);\r\n        navigationView = findViewById(R.id.nav_view);\r\n        toolbar = findViewById(R.id.toolbar);\r\n        nav_home = navigationView.getMenu().findItem(R.id.nav_home);\r\n        nav_recipes = navigationView.getMenu().findItem(R.id.nav_recipes);\r\n        nav_search = navigationView.getMenu().findItem(R.id.nav_search);\r\n        recipeDetailsLayout = findViewById(R.id.recipe_details);\r\n        nutritionLabelLayout = findViewById(R.id.nutrition_dialog_layout);\r\n        //Intialise Nutritional Image\r\n        imageView_nutrition = findViewById(R.id.imageView_nutrition);\r\n        // Intialise Button\r\n        buttonNutritionLabel = findViewById(R.id.button_Nutrition_Label);\r\n        // intialise favorite button\r\n        btnFavorite = findViewById(R.id.btn_favorite);\r\n    }\r\n    private void loadRecipeDetailsWithStaggeredApiCalls() {\r\n        progressBar.setVisibility(View.VISIBLE);\r\n        manager = new RequestManager(this);\r\n        InstructionsManager instructionsManager = new InstructionsManager();\r\n        instructionsManager.fetchInstructionsWithDelay(manager, instructionsListener, recipeId, 0);\r\n        instructionsManager.fetchRecipeDetailsWithDelay(manager, recipeDetailsListener, recipeId, API_REQUEST_DELAY);\r\n        instructionsManager.fetchSimilarRecipesWithDelay(manager, similarRecipesListener, recipeId, API_REQUEST_DELAY * 2);\r\n    }\r\n    // Implementing the recipeDetailsListener\r\n    private final RecipeDetailsListener recipeDetailsListener = new RecipeDetailsListener() {\r\n        @Override\r\n        public void didFetch(RecipeDetailsResponse response, String message) {\r\n            progressBar.setVisibility(View.GONE);\r\n            // Replace with API response json data\r\n            textView_meal_name.setText(response.title);\r\n            textView_meal_source.setText(response.sourceName);\r\n            textView_meal_servings.setText(MessageFormat.format(\"{0}{1}\", response.servings, getString(R.string.textView_meal_servings_textEnd)));\r\n            textView_meal_ready.setText(MessageFormat.format(\"{0}{1}\", response.readyInMinutes, getString(R.string.textView_meal_ready_textEnd)));\r\n            textView_meal_price.setText(MessageFormat.format(\"{0}{1}\", response.pricePerServing, getString(R.string.textView_meal_price_textEnd)));\r\n            // Parsing recipe details using Summary Parser into Grid Layout\r\n            String summary = SummaryParser.parseRecipeDetails(response.summary);\r\n            String[] details = summary.split(\"\\n\");\r\n            // Null Validation\r\n            textView_protein_value.setText(details[0] != null ? details[0] : \"N/A\");\r\n            textView_fat_value.setText(details[1] != null ? details[1] : \"N/A\");\r\n            textView_calories_value.setText(details[2] != null ? details[2] : \"N/A\");\r\n            textView_daily_requirements_coverage_value.setText(details[3] != null ? details[3] : \"N/A\");\r\n            // Loading image using Picasso\r\n            Picasso.get().load(response.image).into(imageView_meal_image);\r\n            // Use custom layout for recycler view\r\n            recycler_meal_ingredients.setHasFixedSize(true);\r\n            recycler_meal_ingredients.setLayoutManager(new LinearLayoutManager(RecipeDetailsActivity.this, LinearLayoutManager.HORIZONTAL, false));\r\n            // Use adapater\r\n            ingredientsAdapater = new IngredientsAdapater(RecipeDetailsActivity.this, response.extendedIngredients);\r\n            recycler_meal_ingredients.setAdapter(ingredientsAdapater);\r\n\r\n        }\r\n\r\n        @Override\r\n        public void didError(String message) {\r\n            progressBar.setVisibility(View.GONE);\r\n            Toast.makeText(RecipeDetailsActivity.this, message, Toast.LENGTH_SHORT).show();\r\n        }\r\n    };\r\n\r\n    // Implementing the similarRecipesListener\r\n    private final SimilarRecipesListener similarRecipesListener = new SimilarRecipesListener() {\r\n        @Override\r\n        public void didFetch(List<SimilarRecipeResponse> response, String message) {\r\n            recycler_meal_similar.setHasFixedSize(true);\r\n            recycler_meal_similar.setLayoutManager(new LinearLayoutManager(RecipeDetailsActivity.this, LinearLayoutManager.HORIZONTAL, false));\r\n            similarRecipeAdapter = new SimilarRecipeAdapter(RecipeDetailsActivity.this, response, recipeClickListener);\r\n            recycler_meal_similar.setAdapter(similarRecipeAdapter);\r\n        }\r\n\r\n        // This is to check functionality first before implementation\r\n        @Override\r\n        public void didError(String message) {\r\n            Toast.makeText(RecipeDetailsActivity.this, \"message\", Toast.LENGTH_SHORT).show();\r\n        }\r\n    };\r\n\r\n    // This is to check functionality first before implementation\r\n    private final RecipeClickListener recipeClickListener = id -> Toast.makeText(RecipeDetailsActivity.this, \"id\", Toast.LENGTH_SHORT).show();\r\n\r\n    private final InstructionsListener instructionsListener = new InstructionsListener() {\r\n        @Override\r\n        public void didFetch(List<InstructionsResponse> response, String message) {\r\n            recycler_meal_instructions.setHasFixedSize(true);\r\n            recycler_meal_instructions.setLayoutManager(new LinearLayoutManager(RecipeDetailsActivity.this, LinearLayoutManager.VERTICAL, false));\r\n            instructionsAdapter = new InstructionsAdapter(RecipeDetailsActivity.this, response);\r\n            recycler_meal_instructions.setAdapter(instructionsAdapter);\r\n        }\r\n\r\n        @Override\r\n        public void didError(String message) {\r\n        }\r\n    };\r\n\r\n    @Override\r\n    public boolean onNavigationItemSelected(@NonNull MenuItem menuItem) {\r\n        int itemId = menuItem.getItemId();\r\n        if (itemId == R.id.nav_home) {\r\n            Intent intent = new Intent(RecipeDetailsActivity.this, MainActivity.class);\r\n            finish();\r\n            startActivity(intent);\r\n        } else if (itemId == R.id.nav_recipes) {\r\n            // Nothing happens\r\n        } else if (itemId == R.id.nav_search) {\r\n            Intent intent2 = new Intent(RecipeDetailsActivity.this, AdvancedSearchActivity.class);\r\n            finish();\r\n            startActivity(intent2);\r\n        }\r\n        drawerLayout.closeDrawer(GravityCompat.START);\r\n        return true;\r\n    }\r\n\r\n    // Loading nutrition image\r\n    private void loadNutritionLabelImage() {\r\n        // Construct the URL for the nutrition label image\r\n        String nutritionLabelUrl = \"https://api.spoonacular.com/recipes/\" + recipeId + \"/nutritionLabel.png?apiKey=\" + getString(R.string.api_key);\r\n        Log.d(\"RecipeDetailsActivity\", \"Nutrition Label URL: \" + nutritionLabelUrl);\r\n        // Load the image using Picasso\r\n        Picasso.get().load(nutritionLabelUrl)\r\n                .into(imageView_nutrition);\r\n    }\r\n\r\n\r\n\r\n\r\n    // Add to favorite list\r\n    MaterialButton btnFavorite;\r\n    List<String> categories;\r\n    private void showFavoriteDialog() {\r\n        View dialogView = getLayoutInflater().inflate(R.layout.dialog_add_to_favorites, null);\r\n        Spinner spinnerCategories = dialogView.findViewById(R.id.spinner_categories);\r\n        EditText editTextNewCategory = dialogView.findViewById(R.id.edit_new_category);\r\n        Button buttonSave = dialogView.findViewById(R.id.button_save);\r\n        Button buttonCancel = dialogView.findViewById(R.id.button_cancel);\r\n\r\n        categories = getCategories();\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, categories);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinnerCategories.setAdapter(adapter);\r\n\r\n        AlertDialog.Builder builder = new AlertDialog.Builder(this);\r\n        builder.setView(dialogView);\r\n        AlertDialog dialog = builder.create();\r\n\r\n        buttonSave.setOnClickListener(v -> {\r\n            String selectedCategory = spinnerCategories.getSelectedItem().toString();\r\n            String newCategory = editTextNewCategory.getText().toString().trim();\r\n\r\n            if (!newCategory.isEmpty()) {\r\n                categories.add(newCategory);\r\n                selectedCategory = newCategory;\r\n            }\r\n            dialog.dismiss();\r\n        });\r\n\r\n        buttonCancel.setOnClickListener(v -> dialog.dismiss());\r\n\r\n        dialog.show();\r\n    }\r\n\r\n    private List<String> getCategories() {\r\n        return new ArrayList<>(Arrays.asList(\"Favorite\"));\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java b/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java
--- a/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java	
+++ b/app/src/main/java/sg/edu/np/mad/pocketchef/RecipeDetailsActivity.java	
@@ -45,10 +45,13 @@
 import sg.edu.np.mad.pocketchef.Listener.RecipeClickListener;
 import sg.edu.np.mad.pocketchef.Listener.RecipeDetailsListener;
 import sg.edu.np.mad.pocketchef.Listener.SimilarRecipesListener;
+import sg.edu.np.mad.pocketchef.Models.CategoryBean;
 import sg.edu.np.mad.pocketchef.Models.InstructionsResponse;
 import sg.edu.np.mad.pocketchef.Models.RecipeDetailsResponse;
 import sg.edu.np.mad.pocketchef.Models.SimilarRecipeResponse;
 import sg.edu.np.mad.pocketchef.Models.SummaryParser;
+import sg.edu.np.mad.pocketchef.base.App;
+import sg.edu.np.mad.pocketchef.base.AppDatabase;
 
 public class RecipeDetailsActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
 
@@ -258,30 +261,32 @@
     // Add to favorite list
     MaterialButton btnFavorite;
     List<String> categories;
+    Spinner spinnerCategories;
     private void showFavoriteDialog() {
         View dialogView = getLayoutInflater().inflate(R.layout.dialog_add_to_favorites, null);
-        Spinner spinnerCategories = dialogView.findViewById(R.id.spinner_categories);
-        EditText editTextNewCategory = dialogView.findViewById(R.id.edit_new_category);
+        spinnerCategories = dialogView.findViewById(R.id.spinner_categories);
+        Button btTextNewCategory = dialogView.findViewById(R.id.bt_new_category);
         Button buttonSave = dialogView.findViewById(R.id.button_save);
         Button buttonCancel = dialogView.findViewById(R.id.button_cancel);
 
-        categories = getCategories();
-        ArrayAdapter<String> adapter = new ArrayAdapter<>(this, android.R.layout.simple_spinner_item, categories);
-        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
-        spinnerCategories.setAdapter(adapter);
+        getCategories();
+
 
         AlertDialog.Builder builder = new AlertDialog.Builder(this);
         builder.setView(dialogView);
         AlertDialog dialog = builder.create();
-
+        btTextNewCategory.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                Intent intent =new Intent(RecipeDetailsActivity.this, CreateCategoryActivity.class);
+                startActivity(intent);
+                dialog.dismiss();
+            }
+        });
         buttonSave.setOnClickListener(v -> {
             String selectedCategory = spinnerCategories.getSelectedItem().toString();
-            String newCategory = editTextNewCategory.getText().toString().trim();
 
-            if (!newCategory.isEmpty()) {
-                categories.add(newCategory);
-                selectedCategory = newCategory;
-            }
+
             dialog.dismiss();
         });
 
@@ -289,8 +294,27 @@
 
         dialog.show();
     }
-
-    private List<String> getCategories() {
-        return new ArrayList<>(Arrays.asList("Favorite"));
+    List<String> list;
+    private void getCategories() {
+        new Thread(new Runnable() {
+            @Override
+            public void run() {
+                List<CategoryBean> data = AppDatabase.getInstance(RecipeDetailsActivity.this)
+                        .categoryDao().getAllCategories();
+                List<String> categories = new ArrayList<>();
+                for(int i=0;i<data.size();i++){
+                    categories.add(data.get(i).text);
+                }
+                runOnUiThread(new Runnable() {
+                    @Override
+                    public void run() {
+                        ArrayAdapter<String> adapter = new ArrayAdapter<>(RecipeDetailsActivity.this,
+                                android.R.layout.simple_spinner_item, categories);
+                        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+                        spinnerCategories.setAdapter(adapter);
+                    }
+                });
+            }
+        }).start();
     }
 }
\ No newline at end of file
Index: app/src/main/res/layout/activity_create_category.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_create_category.xml b/app/src/main/res/layout/activity_create_category.xml
new file mode 100644
--- /dev/null	
+++ b/app/src/main/res/layout/activity_create_category.xml	
@@ -0,0 +1,34 @@
+<?xml version="1.0" encoding="utf-8"?>
+<androidx.constraintlayout.widget.ConstraintLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:id="@+id/main"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/primary"
+    tools:context=".CreateCategoryActivity">
+
+
+
+
+
+    <androidx.recyclerview.widget.RecyclerView
+        android:id="@+id/rv"
+        android:layout_width="match_parent"
+        android:layout_height="0dp"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent"
+        />
+    <Button
+        android:id="@+id/bt"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:text="add new Category"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintBottom_toBottomOf="parent"
+        android:layout_marginBottom="50dp"
+        />
+
+</androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
